var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.195,1,0.671]],["body/components/AppComponent.html",[0,0.313,1,1.151,2,1.324,3,0.372,4,0.314,5,1.1,6,1.1,7,1.1,8,1.1,9,0.314,10,2.559,11,1.633,12,2.045,13,1.1,14,2.028,15,1.643,16,2.268,17,1.47,18,4.692,19,1.633,20,4.166,21,0.433,22,1.07,23,2.434,24,0.638,25,1.698,26,1.895,27,0.853,28,3.118,29,0.892,30,0.041,31,0.748,32,0.565,33,0.8,34,3.118,35,0.8,36,0.991,37,0.664,38,0.433,39,2.192,40,0.372,41,0.208,42,1.222,43,3.118,44,0.892,45,1.47,46,1.47,47,1.1,48,1.767,49,1.1,50,1.1,51,0.638,52,1.1,53,0.716,54,1.1,55,0.716,56,1.1,57,1.1,58,0.716,59,1.078,60,1.1,61,0.638,62,1.1,63,0.716,64,1.1,65,0.716,66,0.892,67,1.1,68,0.638,69,0.991,70,1.1,71,1.1,72,0.021,73,0.028,74,0.021]],["title/modules/AppModule.html",[75,1.796,76,1.796]],["body/modules/AppModule.html",[1,1.278,3,0.295,4,0.249,9,0.249,15,0.707,30,0.042,37,0.917,38,0.343,40,0.295,41,0.165,44,0.707,51,1.023,53,1.148,55,1.148,58,1.148,61,1.023,63,1.148,65,1.148,66,1.015,68,1.023,72,0.017,73,0.024,74,0.017,75,1.521,76,3.651,77,1.347,78,1.521,79,3.407,80,2.788,81,3.407,82,1.739,83,2.031,84,2.031,85,2.031,86,2.031,87,2.031,88,2.72,89,2.72,90,2.913,91,2.031,92,1.739,93,2.474,94,2.913,95,3.549,96,2.913,97,1.739,98,2.913,99,3.549,100,1.521,101,3.549,102,3.549,103,1.347,104,3.549,105,2.474,106,2.474,107,2.474,108,2.031,109,2.474,110,2.031,111,4.15,112,2.182,113,2.474,114,1.739,115,2.474,116,2.031,117,2.474,118,2.474,119,2.031,120,2.474,121,1.739,122,2.474,123,2.031,124,4.15,125,1.521,126,1.739,127,2.474,128,2.474,129,2.474,130,1.347]],["title/modules/AppRoutingModule.html",[75,1.796,88,1.59]],["body/modules/AppRoutingModule.html",[0,0.336,3,0.433,4,0.366,9,0.366,30,0.042,37,0.892,38,0.504,40,0.433,41,0.242,51,0.941,61,0.941,68,0.941,69,1.153,72,0.025,73,0.031,74,0.025,77,1.976,82,2.551,88,2.504,94,2.979,98,3.775,108,2.979,110,2.979,116,2.979,119,2.979,131,3.628,132,3.628,133,3.104,134,4.598,135,1.581,136,3.104,137,2.231,138,1.581,139,5.308,140,3.628,141,2.827,142,3.628,143,3.628,144,2.979,145,3.775,146,3.628]],["title/components/AuthComponent.html",[0,0.195,51,0.598]],["body/components/AuthComponent.html",[0,0.255,1,0.495,2,1.019,3,0.257,4,0.217,5,0.76,6,0.76,7,0.76,8,0.76,9,0.217,13,0.76,14,1.887,15,1.529,17,1.132,19,1.257,21,0.299,22,0.823,24,0.441,25,1.172,26,1.679,27,0.974,29,0.917,30,0.042,31,0.677,32,0.695,33,0.823,35,0.823,36,1.019,37,0.723,38,0.299,40,0.257,41,0.143,42,0.844,44,0.616,45,1.132,46,1.132,47,0.76,48,1.498,49,0.76,50,0.76,51,0.869,52,0.76,53,0.495,54,0.76,55,0.495,56,0.76,57,0.76,58,0.495,59,0.88,60,0.76,61,0.441,62,0.76,63,0.495,64,0.76,65,0.495,66,0.616,67,0.76,68,0.441,69,0.684,70,0.76,71,0.76,72,0.015,73,0.022,74,0.015,100,1.324,130,2.086,135,0.938,138,1.397,144,2.632,147,1.767,148,3.831,149,3.206,150,1.019,151,4.538,152,3.145,153,4.928,154,2.632,155,4.244,156,2.683,157,3.206,158,2.632,159,3.484,160,2.153,161,1.767,162,2.153,163,3.831,164,1.501,165,1.501,166,2.311,167,2.153,168,2.153,169,2.254,170,0.76,171,1.172,172,1.767,173,0.938,174,3.831,175,1.767,176,0.684,177,1.669,178,2.153,179,3.19,180,2.153,181,3.831,182,3.831,183,2.153,184,2.153,185,2.153,186,1.767,187,2.153,188,1.514,189,2.153,190,2.153,191,2.153,192,3.206,193,2.153,194,2.153,195,2.153,196,1.767,197,2.61,198,4.244,199,4.244,200,3.206]],["title/interfaces/AuthDataResponse.html",[171,1.59,201,1.59]],["body/interfaces/AuthDataResponse.html",[3,0.315,4,0.266,9,0.266,16,1.438,21,0.366,26,0.932,30,0.042,32,0.892,33,0.954,37,0.814,38,0.366,40,0.443,41,0.176,42,1.035,72,0.018,73,0.025,74,0.018,103,1.438,135,1.151,138,1.875,150,1.182,156,2.342,170,0.932,171,2.024,173,1.62,176,1.367,177,2.372,179,3.588,188,3.282,197,1.624,201,1.438,202,2.641,203,1.856,204,2.856,205,3.282,206,3.588,207,2.87,208,2.645,209,2.613,210,1.457,211,1.856,212,2.168,213,2.168,214,1.283,215,1.686,216,2.168,217,1.624,218,1.875,219,2.168,220,1.856,221,2.168,222,2.168,223,2.168,224,2.168,225,2.613,226,3.052,227,2.168,228,2.613,229,3.052,230,3.052,231,3.052,232,3.052,233,3.052,234,2.168,235,3.052,236,1.856,237,2.168,238,2.168,239,2.168,240,2.168,241,2.168,242,2.168,243,2.168,244,1.856,245,2.168,246,2.168,247,2.168,248,2.168,249,2.168,250,2.168,251,2.168,252,2.168]],["title/guards/AuthGuard.html",[136,1.796,137,1.796]],["body/guards/AuthGuard.html",[3,0.379,4,0.32,9,0.32,11,1.245,16,1.73,21,0.441,22,1.083,24,0.65,25,1.73,26,1.905,27,0.864,29,1.206,30,0.042,31,0.672,32,0.765,33,1.083,35,0.816,37,0.837,38,0.441,39,2.234,40,0.379,41,0.212,42,1.245,72,0.022,73,0.029,74,0.022,130,1.73,135,1.385,136,2.594,138,1.385,145,4.311,156,2.999,169,3.329,170,1.121,173,1.385,176,1.505,208,2.594,210,1.653,214,1.544,215,1.245,217,1.954,253,3.177,254,3.329,255,2.608,256,3.177,257,3.177,258,5.046,259,4.736,260,5.046,261,3.177,262,4.219,263,4.736,264,4.219,265,2.608,266,2.234,267,2.608,268,2.608,269,3.177,270,4.219,271,3.177]],["title/interceptors/AuthInterceptorService.html",[89,1.59,272,2.397]],["body/interceptors/AuthInterceptorService.html",[3,0.395,4,0.334,9,0.334,11,1.298,21,0.46,22,1.113,24,0.678,25,1.803,26,1.927,27,0.888,29,1.24,30,0.042,31,0.691,32,0.786,33,1.113,35,0.85,37,0.849,38,0.46,40,0.395,41,0.221,42,1.298,72,0.023,73,0.03,74,0.023,89,2.361,103,1.803,138,1.443,169,3.398,170,1.169,172,2.719,176,1.536,210,1.699,214,1.609,215,1.298,254,3.398,266,2.328,267,2.719,268,2.719,273,3.312,274,2.719,275,4.834,276,3.312,277,3.312,278,5.128,279,4.834,280,5.128,281,3.312,282,4.336,283,3.312,284,4.336,285,3.312,286,3.312,287,3.312,288,3.312,289,3.312,290,3.312,291,3.312,292,3.312,293,3.312,294,3.312]],["title/injectables/AuthService.html",[26,1.031,210,1.145]],["body/injectables/AuthService.html",[3,0.271,4,0.229,9,0.229,16,1.239,21,0.316,22,0.857,24,0.466,26,1.178,27,1.053,29,1.246,30,0.042,31,0.695,32,0.842,33,1.119,35,1.192,36,1.257,37,0.774,38,0.316,40,0.398,41,0.152,42,0.891,72,0.015,73,0.023,74,0.015,103,1.239,135,0.991,138,1.724,150,1.061,156,2.731,164,1.309,165,1.309,170,0.803,171,1.239,173,1.9,176,1.257,177,2.288,179,3.752,188,1.599,197,2.433,201,1.239,203,1.599,204,2.643,205,1.599,206,3.264,207,2.875,208,1.399,209,3.064,210,1.309,211,1.599,212,1.867,213,1.867,214,1.105,215,1.82,216,1.867,217,1.399,218,1.9,219,2.741,220,2.347,221,3.248,222,2.741,223,2.741,224,1.867,225,2.347,226,2.741,227,1.867,228,2.347,229,2.741,230,2.741,231,2.741,232,2.741,233,2.741,234,3.578,235,2.741,236,1.599,237,1.867,238,1.867,239,1.867,240,1.867,241,1.867,242,1.867,243,2.741,244,3.064,245,1.867,246,1.867,247,1.867,248,2.741,249,1.867,250,1.867,251,1.867,252,1.867,295,1.599,296,3.339,297,3.339,298,1.867,299,3.339,300,2.275,301,2.275,302,2.275,303,2.275,304,2.275,305,2.275]],["title/components/HeaderComponent.html",[0,0.195,53,0.671]],["body/components/HeaderComponent.html",[0,0.266,1,0.532,2,1.075,3,0.276,4,0.233,5,0.817,6,0.817,7,0.817,8,0.817,9,0.233,11,1.325,12,1.741,13,0.817,14,1.917,15,1.553,17,1.193,19,1.325,21,0.321,22,0.868,23,2.136,24,0.692,25,1.26,26,1.723,27,1.058,29,0.967,30,0.042,31,0.701,32,0.613,33,0.868,35,1.2,36,1.552,37,0.745,38,0.321,39,1.627,40,0.276,41,0.154,44,0.662,45,1.193,46,1.193,47,0.817,48,1.551,49,0.817,50,0.817,51,0.474,52,0.817,53,1.01,54,0.817,55,0.532,56,0.817,57,0.817,58,0.532,59,0.918,60,0.817,61,0.474,62,0.817,63,0.532,64,0.817,65,0.532,66,0.662,67,0.817,68,0.474,69,1.27,70,0.817,71,0.817,72,0.016,73,0.023,74,0.016,135,1.009,141,2.457,150,1.075,156,2.746,164,0.907,165,0.907,166,1.841,170,0.817,173,2.128,176,1.075,197,2.079,208,1.423,215,0.907,244,2.377,306,1.9,307,3.381,308,3.996,309,3.381,310,4.675,311,3.996,312,3.608,313,4.395,314,4.395,315,3.381,316,2.451,317,3.381,318,2.314,319,2.314,320,2.314,321,2.314,322,3.381,323,2.314,324,1.423,325,2.314,326,3.28,327,2.314,328,2.314,329,2.314,330,3.381,331,2.314,332,2.314,333,2.314,334,2.314,335,3.381,336,2.776]],["title/components/LoadingSpinnerComponent.html",[0,0.195,55,0.671]],["body/components/LoadingSpinnerComponent.html",[0,0.293,1,0.631,2,1.214,3,0.327,4,0.277,5,1.348,6,0.969,7,0.969,8,0.969,9,0.277,13,0.969,14,1.983,15,1.607,17,1.348,30,0.041,31,0.609,37,0.437,38,0.381,40,0.327,41,0.183,44,0.785,45,1.348,46,1.348,47,0.969,48,1.676,49,0.969,50,0.969,51,0.562,52,0.969,53,0.631,54,0.969,55,1.091,56,1.824,57,0.969,58,0.631,59,1.009,60,0.969,61,0.562,62,0.969,63,0.631,64,0.969,65,0.631,66,0.785,67,0.969,68,0.562,69,0.872,70,0.969,71,0.969,72,0.019,73,0.026,74,0.019,337,2.253,338,2.253,339,3.819,340,4.392,341,5.301,342,5.301,343,3.819,344,2.744,345,3.819,346,3.819,347,2.744,348,3.819,349,3.819,350,3.819,351,2.744,352,3.819,353,2.744,354,4.748,355,2.744,356,3.819,357,2.744,358,3.819,359,2.744,360,3.819,361,2.744,362,2.744,363,4.748,364,2.744,365,2.744,366,2.744,367,3.135,368,2.744,369,1.687,370,2.744,371,2.744,372,4.392,373,4.392,374,2.744,375,4.392,376,2.744,377,2.744,378,2.744,379,2.744,380,2.744,381,2.744,382,3.819,383,2.744,384,2.744,385,2.744]],["title/classes/Reminder.html",[41,0.195,59,0.671]],["body/classes/Reminder.html",[3,0.394,4,0.333,9,0.333,21,0.458,24,0.886,27,1.138,29,0.945,30,0.04,31,0.87,32,1.008,33,0.848,40,0.394,41,0.22,59,0.995,72,0.022,73,0.029,74,0.022,150,1.376,204,2.79,207,2.887,386,2.322,387,2.712,388,4.907,389,3.27,390,3.27,391,3.27,392,3.27,393,3.304,394,3.966,395,3.304,396,3.304,397,3.304,398,3.304,399,3.304,400,3.304,401,3.304]],["title/components/ReminderAddComponent.html",[0,0.195,58,0.671]],["body/components/ReminderAddComponent.html",[0,0.225,1,0.402,2,0.87,3,0.209,4,0.177,5,0.618,6,0.618,7,0.618,8,0.618,9,0.177,11,1.073,12,1.469,13,0.618,14,1.793,15,1.453,17,0.966,19,1.073,21,0.243,22,0.703,23,1.852,24,0.358,27,1.096,29,0.964,30,0.041,31,0.81,32,0.884,33,0.865,35,0.979,36,1.315,37,0.608,38,0.243,40,0.209,41,0.117,42,0.686,44,0.501,45,0.966,46,0.966,47,0.618,48,1.345,49,0.618,50,0.618,51,0.358,52,0.618,53,0.402,54,0.618,55,0.402,56,0.618,57,0.618,58,0.876,59,1.277,60,0.618,61,0.358,62,0.618,63,0.402,64,0.618,65,0.402,66,0.501,67,0.618,68,0.358,69,1.071,70,0.618,71,0.618,72,0.012,73,0.019,74,0.012,100,1.076,114,3.798,130,0.953,138,1.803,150,0.87,152,2.767,154,2.247,158,2.247,159,3.129,161,1.437,164,1.321,165,1.621,166,2.496,175,1.437,176,0.556,177,1.661,196,1.437,205,1.924,207,2.305,218,1.911,316,2.131,324,1.076,389,1.683,390,2.344,391,2.344,392,2.344,394,2.68,402,3.322,403,1.437,404,3.129,405,3.371,406,2.737,407,3.371,408,3.371,409,3.371,410,3.371,411,3.371,412,3.371,413,4.386,414,2.737,415,2.247,416,1.924,417,2.247,418,1.437,419,2.737,420,1.75,421,1.75,422,2.767,423,1.75,424,1.75,425,1.75,426,1.75,427,2.737,428,1.75,429,1.75,430,1.75,431,1.75,432,1.75,433,1.75,434,1.75,435,1.437,436,1.076,437,1.437,438,1.75,439,1.75,440,1.75,441,1.437,442,1.75,443,1.75,444,1.437,445,2.737,446,1.75,447,2.737,448,1.75,449,2.737,450,1.75,451,2.737,452,1.75,453,1.75,454,1.75,455,1.75,456,1.75,457,1.75,458,2.737,459,1.75,460,1.75,461,1.75,462,1.75,463,1.75,464,2.737,465,2.737,466,2.737,467,2.737,468,2.737,469,2.737,470,2.247,471,2.737,472,2.737,473,2.247,474,2.737,475,2.737,476,2.247,477,1.75,478,1.75,479,1.75]],["title/components/ReminderComponent.html",[0,0.195,61,0.598]],["body/components/ReminderComponent.html",[0,0.319,1,0.744,2,1.358,3,0.386,4,0.327,5,1.143,6,1.143,7,1.143,8,1.143,9,0.327,11,1.675,12,2.084,13,1.143,14,2.041,15,1.654,17,1.508,19,1.675,21,0.45,22,1.097,23,2.471,24,0.979,27,0.875,30,0.04,31,0.681,35,0.832,36,1.358,37,0.516,38,0.45,40,0.386,41,0.216,44,0.926,45,1.508,46,1.508,47,1.143,48,1.794,49,1.143,50,1.143,51,0.663,52,1.143,53,0.744,54,1.143,55,0.744,56,1.143,57,1.143,58,0.744,59,1.214,60,1.143,61,1.041,62,1.143,63,0.744,64,1.143,65,0.744,66,0.926,67,1.143,68,0.663,69,1.03,70,1.143,71,1.143,72,0.022,73,0.029,74,0.022,480,2.659,481,4.782,482,4.273,483,3.239,484,3.239]],["title/components/ReminderListComponent.html",[0,0.195,63,0.671]],["body/components/ReminderListComponent.html",[0,0.236,1,0.435,2,0.925,3,0.226,4,0.191,5,0.669,6,0.669,7,0.669,8,0.669,9,0.191,11,1.141,12,1.545,13,0.669,14,1.83,15,1.483,17,1.027,19,1.141,21,0.263,22,0.747,23,1.933,24,0.596,27,1.043,29,1.227,30,0.042,31,0.813,32,0.721,33,1.102,35,1.163,36,1.548,37,0.722,38,0.263,40,0.226,41,0.126,44,0.542,45,1.027,46,1.027,47,0.669,48,1.404,49,0.669,50,0.669,51,0.388,52,0.669,53,0.435,54,0.669,55,0.435,56,0.669,57,0.669,58,0.435,59,1.293,60,0.669,61,0.388,62,0.669,63,0.914,64,0.669,65,0.435,66,1.014,67,0.669,68,0.388,69,0.602,70,0.669,71,0.669,72,0.02,73,0.02,74,0.013,80,1.165,112,3.189,123,3.265,125,1.165,126,1.332,141,2.786,150,0.925,164,0.743,165,0.743,170,0.669,173,1.269,176,0.925,214,0.921,228,1.332,265,2.39,312,3.265,316,2.202,324,1.165,326,2.91,389,1.165,390,2.18,391,1.165,392,2.18,402,3.189,416,2.796,418,1.556,436,1.165,437,1.556,441,2.91,444,1.556,476,2.39,485,1.556,486,3.545,487,3.545,488,2.911,489,3.545,490,2.911,491,2.911,492,2.911,493,2.911,494,3.545,495,2.911,496,1.895,497,1.895,498,2.911,499,1.895,500,2.911,501,1.895,502,2.911,503,1.895,504,2.911,505,3.545,506,1.895,507,1.895,508,1.895,509,1.895,510,1.895,511,1.895,512,1.895,513,1.895,514,1.895,515,1.895,516,1.895,517,1.895,518,1.895,519,1.895,520,1.895,521,1.895,522,1.895,523,1.895,524,1.895,525,1.895,526,1.895,527,1.332,528,1.895,529,1.895,530,1.332,531,1.332,532,1.895,533,1.895,534,1.895,535,1.895,536,1.895,537,1.895,538,1.895,539,2.911,540,2.911,541,2.911,542,1.895,543,2.911,544,2.911]],["title/components/ReminderListItemComponent.html",[0,0.195,65,0.671]],["body/components/ReminderListItemComponent.html",[0,0.261,1,0.513,2,1.047,3,0.266,4,0.225,5,0.788,6,0.788,7,0.788,8,0.788,9,0.225,12,0.973,13,0.788,14,1.902,15,1.541,17,1.162,19,1.291,21,0.31,22,0.846,24,0.801,27,1.048,30,0.041,31,0.525,32,0.597,35,1.005,36,1.244,37,0.624,38,0.31,40,0.266,41,0.149,44,0.638,45,1.162,46,1.162,47,0.788,48,1.525,49,0.788,50,0.788,51,0.457,52,0.788,53,0.513,54,0.788,55,0.513,56,0.788,57,0.788,58,0.513,59,1.277,60,0.788,61,0.457,62,0.788,63,0.513,64,0.788,65,0.993,66,1.678,67,0.788,68,0.457,69,0.71,70,0.788,71,0.788,72,0.015,73,0.022,74,0.015,112,3.212,121,3.673,150,1.047,164,0.875,165,0.875,166,1.793,218,1.435,324,2.025,402,3.212,415,2.704,416,3.037,417,2.704,422,3.782,435,1.833,436,1.373,527,2.315,530,2.315,531,2.315,545,1.833,546,3.293,547,3.913,548,3.293,549,3.913,550,4.821,551,4.821,552,4.32,553,2.233,554,2.233,555,2.233,556,2.233,557,2.233,558,2.233,559,2.233,560,2.233,561,2.233,562,2.233,563,2.233,564,2.233,565,1.833,566,2.233,567,2.233,568,2.233,569,2.233,570,3.293,571,2.233,572,2.233,573,2.704,574,4.32,575,3.293,576,2.704]],["title/injectables/ReminderService.html",[210,1.145,316,1.419]],["body/injectables/ReminderService.html",[3,0.26,4,0.22,9,0.22,16,1.186,21,0.302,22,0.83,24,0.446,27,1.04,29,1.304,30,0.042,31,0.865,32,0.866,33,1.171,35,1.171,36,1.449,37,0.727,38,0.302,40,0.26,41,0.145,42,0.854,59,1.136,72,0.015,73,0.022,74,0.015,103,1.186,141,2.371,150,1.028,164,1.267,165,1.267,170,0.769,176,0.692,177,1.409,186,1.788,204,1.761,207,2.636,209,3,210,1.267,211,3.205,214,1.058,217,1.339,218,2.082,220,2.273,225,3,266,1.531,295,1.531,298,1.788,316,1.571,336,2.654,369,1.988,389,3.124,390,3.124,391,3.124,392,3.124,394,3.713,436,1.339,527,1.531,530,1.531,531,1.531,573,1.788,576,1.788,577,1.788,578,3.857,579,3.857,580,3.233,581,4.268,582,3.233,583,2.178,584,2.178,585,2.178,586,3.233,587,2.178,588,2.178,589,2.178,590,3.233,591,2.178,592,3.233,593,3.233,594,2.178,595,4.268,596,4.268,597,3.233,598,3.233,599,2.178,600,3.857,601,2.178,602,2.178,603,2.178,604,2.178,605,2.178,606,2.178,607,2.178,608,3.233,609,2.178,610,4.268,611,4.268,612,2.178,613,3.857,614,2.178,615,2.178]],["title/components/SettingsComponent.html",[0,0.195,68,0.598]],["body/components/SettingsComponent.html",[0,0.297,1,0.649,2,1.239,3,0.337,4,0.285,5,0.997,6,0.997,7,0.997,8,0.997,9,0.285,11,1.527,12,1.944,13,0.997,14,1.994,15,1.615,17,1.375,19,1.527,21,0.392,22,1.001,23,2.337,24,0.913,27,0.798,30,0.04,31,0.621,35,0.726,36,1.239,37,0.45,38,0.392,40,0.337,41,0.188,44,0.808,45,1.375,46,1.375,47,0.997,48,1.697,49,0.997,50,0.997,51,0.578,52,0.997,53,0.649,54,0.997,55,0.649,56,0.997,57,0.997,58,0.649,59,1.025,60,0.997,61,0.578,62,0.997,63,0.649,64,0.997,65,0.649,66,0.808,67,0.997,68,0.984,69,1.699,70,0.997,71,0.997,72,0.019,73,0.027,74,0.019,177,1.698,369,2.396,470,3.199,616,2.32,617,4.461,618,3.897,619,2.826,620,2.826,621,3.897,622,3.897,623,3.897,624,3.897,625,5.215,626,3.897,627,3.897,628,3.897,629,5.445,630,3.897,631,3.199,632,3.897,633,3.897,634,3.897,635,3.897,636,3.897,637,3.897,638,3.897]],["title/classes/User.html",[41,0.195,215,1.145]],["body/classes/User.html",[3,0.439,4,0.371,9,0.371,21,0.511,24,0.949,27,1.092,29,1.052,30,0.04,31,0.586,32,0.921,33,0.944,40,0.439,41,0.245,72,0.025,73,0.032,74,0.025,150,1.474,173,1.603,176,1.169,177,2.325,204,2.994,206,3.571,207,2.866,215,1.818,236,3.571,386,2.586,388,4.61,404,3.02,639,3.02,640,4.638,641,3.678,642,3.678,643,3.678,644,3.678,645,3.678,646,3.678,647,3.678,648,3.678,649,3.678,650,3.678]],["title/coverage.html",[651,3.272]],["body/coverage.html",[0,0.377,1,0.723,9,0.317,10,2.584,26,1.111,30,0.041,32,0.571,41,0.279,51,0.644,53,0.723,55,0.723,58,0.723,59,0.723,61,0.644,63,0.723,65,0.723,66,1.199,68,0.644,72,0.021,73,0.029,74,0.021,89,1.714,112,2.578,114,2.212,121,2.212,136,1.935,137,1.935,147,2.584,171,1.714,201,1.714,203,2.947,210,1.643,215,1.233,218,1.372,254,2.947,255,2.584,272,2.584,274,2.584,306,2.584,316,1.529,337,2.584,338,2.584,367,4.908,387,2.584,402,2.898,403,2.584,480,2.584,485,2.584,545,2.584,577,2.584,616,2.584,639,2.584,651,2.584,652,3.147,653,3.147,654,3.147,655,5.235,656,3.147,657,5.027,658,3.147,659,3.147,660,3.147,661,3.147,662,3.147,663,5.235,664,2.584,665,5.027,666,3.441,667,2.584,668,3.441,669,2.584,670,2.584,671,3.147,672,3.147]],["title/dependencies.html",[78,2.16,673,2.439]],["body/dependencies.html",[30,0.041,38,0.555,72,0.027,73,0.033,74,0.027,78,2.459,80,3.004,96,4.011,97,3.434,100,2.459,125,2.459,126,2.812,135,1.743,170,1.412,565,3.283,674,4.846,675,3.999,676,3.999,677,3.999,678,3.999,679,3.999,680,3.999,681,3.999,682,3.999,683,3.999,684,3.999,685,3.999,686,3.999,687,3.999]],["title/index.html",[21,0.338,688,2.439,689,2.439]],["body/index.html",[0,0.33,4,0.352,15,0.999,30,0.031,31,0.557,72,0.024,73,0.031,74,0.024,92,2.457,125,3.465,218,1.523,473,2.869,674,2.869,690,3.495,691,3.495,692,3.495,693,3.495,694,3.495,695,4.489,696,3.495,697,4.96,698,4.96,699,3.495,700,3.495,701,4.489,702,5.414,703,3.495,704,3.495,705,3.495,706,3.495,707,3.495,708,3.495,709,3.495,710,3.495,711,3.495,712,3.495,713,4.96,714,4.96,715,3.495,716,5.414,717,3.495,718,3.495,719,3.495,720,3.495,721,3.495,722,3.495,723,2.869,724,4.489,725,4.489,726,5.234,727,3.495,728,4.489,729,4.489,730,3.495,731,5.234,732,3.495,733,3.495,734,3.495,735,4.96,736,3.495,737,3.495,738,2.457,739,3.495,740,3.495,741,3.495]],["title/modules.html",[77,2.17]],["body/modules.html",[30,0.036,72,0.031,73,0.036,74,0.031,76,2.805,77,2.484,88,2.484,97,3.207,742,4.562,743,4.562,744,5.284,745,4.562,746,4.562]],["title/overview.html",[738,2.802]],["body/overview.html",[1,1.29,2,1.094,30,0.04,44,0.984,51,1.008,53,1.131,55,1.131,58,1.131,61,1.008,63,1.131,65,1.131,68,1.008,72,0.023,73,0.03,74,0.023,75,2.115,76,3.736,77,1.873,78,2.115,79,2.824,80,2.115,81,2.824,82,2.419,83,2.824,84,2.824,85,2.824,86,2.824,87,2.824,88,2.681,89,2.681,90,3.649,91,2.824,92,2.419,133,2.115,137,2.115,201,1.873,295,2.419,369,2.733,386,2.419,631,4.042,738,2.419,747,3.44,748,3.44]],["title/routes.html",[133,2.451]],["body/routes.html",[30,0.037,72,0.032,73,0.037,74,0.032,133,2.895]],["title/miscellaneous/variables.html",[749,2.002,750,2.883]],["body/miscellaneous/variables.html",[21,0.56,30,0.041,32,0.999,72,0.027,73,0.033,74,0.027,130,2.675,164,2.076,165,2.076,166,2.198,664,3.313,666,4.524,667,3.313,668,3.313,669,4.033,670,4.033,723,4.033,749,3.313,750,3.313,751,4.913,752,4.036,753,4.036,754,4.036,755,4.036,756,4.036,757,4.913]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":380,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.3s",{"_index":378,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.45s",{"_index":376,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.5",{"_index":368,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0/1",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":369,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["1.2s",{"_index":364,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["10.2.0",{"_index":674,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["100",{"_index":384,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["2",{"_index":631,"title":{},"body":{"components/SettingsComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["212529",{"_index":360,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["3",{"_index":634,"title":{},"body":{"components/SettingsComponent.html":{}}}],["3.5.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":748,"title":{},"body":{"overview.html":{}}}],["4.5.3",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":362,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["6.6.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":356,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["8.0.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["80px",{"_index":349,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["8px",{"_index":358,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["9",{"_index":747,"title":{},"body":{"overview.html":{}}}],["_token",{"_index":236,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["absolute",{"_index":355,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["accessors",{"_index":640,"title":{},"body":{"classes/User.html":{}}}],["action",{"_index":540,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["activatedroutesnapshot",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":404,"title":{},"body":{"components/ReminderAddComponent.html":{},"classes/User.html":{}}}],["add'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["add.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.css",{"_index":405,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.html",{"_index":406,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts",{"_index":403,"title":{},"body":{"components/ReminderAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:13",{"_index":420,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:15",{"_index":421,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:17",{"_index":423,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:19",{"_index":431,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:20",{"_index":429,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:21",{"_index":430,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:22",{"_index":432,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:24",{"_index":434,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:25",{"_index":433,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:26",{"_index":419,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:29",{"_index":424,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:38",{"_index":426,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:51",{"_index":428,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:55",{"_index":425,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add/reminder",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderAddComponent.html":{},"coverage.html":{}}}],["allreminders",{"_index":578,"title":{},"body":{"injectables/ReminderService.html":{}}}],["angular",{"_index":697,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":565,"title":{},"body":{"components/ReminderListItemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDataResponse.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["angular/compiler",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":561,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["animation",{"_index":363,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["api",{"_index":470,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":76,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":88,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arialabelledby",{"_index":512,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["artifacts",{"_index":717,"title":{},"body":{"index.html":{}}}],["auth",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["auth.component.css",{"_index":148,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":149,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"interceptors/AuthInterceptorService.html":{}}}],["auth/auth",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authdataresponse",{"_index":171,"title":{"interfaces/AuthDataResponse.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":136,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptorservice",{"_index":89,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["authobserver",{"_index":181,"title":{},"body":{"components/AuthComponent.html":{}}}],["authobserver.subscribe",{"_index":185,"title":{},"body":{"components/AuthComponent.html":{}}}],["authorization",{"_index":291,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["authservice",{"_index":26,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["autologin",{"_index":234,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["automatically",{"_index":707,"title":{},"body":{"index.html":{}}}],["available",{"_index":746,"title":{},"body":{"modules.html":{}}}],["az",{"_index":621,"title":{},"body":{"components/SettingsComponent.html":{}}}],["backkend",{"_index":523,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["basic",{"_index":514,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["bearer",{"_index":292,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["behaviorsubject",{"_index":211,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["behaviorsubject(null",{"_index":219,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["bezier(0.5",{"_index":366,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["block",{"_index":345,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{}}}],["border",{"_index":354,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["box",{"_index":352,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["browse",{"_index":744,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":716,"title":{},"body":{"index.html":{}}}],["buy",{"_index":595,"title":{},"body":{"injectables/ReminderService.html":{}}}],["canactivate",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["change",{"_index":709,"title":{},"body":{"index.html":{}}}],["changes",{"_index":544,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["check",{"_index":737,"title":{},"body":{"index.html":{}}}],["child(1",{"_index":374,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(2",{"_index":377,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(3",{"_index":379,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["choose",{"_index":465,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["class",{"_index":41,"title":{"classes/Reminder.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":386,"title":{},"body":{"classes/Reminder.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":698,"title":{},"body":{"index.html":{}}}],["close",{"_index":543,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["cluster_appmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":711,"title":{},"body":{"index.html":{}}}],["color",{"_index":371,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["command",{"_index":739,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["console.log('elmentett",{"_index":536,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["console.log(errormessage",{"_index":189,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(reason",{"_index":518,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["console.log(this.formname",{"_index":456,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["console.log(this.urlstr",{"_index":224,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["const",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["constructor(authservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderComponent.html":{}}}],["constructor(email",{"_index":641,"title":{},"body":{"classes/User.html":{}}}],["constructor(http",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["constructor(id",{"_index":393,"title":{},"body":{"classes/Reminder.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{}}}],["constructor(reminderservice",{"_index":418,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["content",{"_index":507,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["context",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":651,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":575,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["createreminder",{"_index":579,"title":{},"body":{"injectables/ReminderService.html":{}}}],["createreminder(name",{"_index":584,"title":{},"body":{"injectables/ReminderService.html":{}}}],["creation",{"_index":389,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["cubic",{"_index":365,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["current",{"_index":539,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["címe",{"_index":630,"title":{},"body":{"components/SettingsComponent.html":{}}}],["date",{"_index":394,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{}}}],["deadline",{"_index":390,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":164,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":375,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["delete",{"_index":574,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["delete(`http:/localhost:3000/reminders/${reminderid",{"_index":615,"title":{},"body":{"injectables/ReminderService.html":{}}}],["deleteevent",{"_index":567,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["deletereminder",{"_index":580,"title":{},"body":{"injectables/ReminderService.html":{}}}],["deletereminder(reminderid",{"_index":586,"title":{},"body":{"injectables/ReminderService.html":{}}}],["dependencies",{"_index":78,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":391,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["dev",{"_index":704,"title":{},"body":{"index.html":{}}}],["development",{"_index":700,"title":{},"body":{"index.html":{}}}],["die",{"_index":598,"title":{},"body":{"injectables/ReminderService.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":715,"title":{},"body":{"index.html":{}}}],["directory",{"_index":720,"title":{},"body":{"index.html":{}}}],["display",{"_index":343,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["dist",{"_index":719,"title":{},"body":{"index.html":{}}}],["div",{"_index":351,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["div:nth",{"_index":373,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["documentation",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["done",{"_index":524,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["dynamic",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":622,"title":{},"body":{"components/SettingsComponent.html":{}}}],["e2e",{"_index":732,"title":{},"body":{"index.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":177,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["emlékeztet",{"_index":625,"title":{},"body":{"components/SettingsComponent.html":{}}}],["end",{"_index":731,"title":{},"body":{"index.html":{}}}],["environment",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":151,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage",{"_index":188,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["errormessage.message",{"_index":193,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.name",{"_index":190,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.status",{"_index":194,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.statustext",{"_index":195,"title":{},"body":{"components/AuthComponent.html":{}}}],["eventemitter",{"_index":422,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["execute",{"_index":728,"title":{},"body":{"index.html":{}}}],["exhaustmap",{"_index":285,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["exhaustmap((user",{"_index":286,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":166,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["felvételének",{"_index":626,"title":{},"body":{"components/SettingsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["files",{"_index":710,"title":{},"body":{"index.html":{}}}],["flag",{"_index":722,"title":{},"body":{"index.html":{}}}],["food",{"_index":596,"title":{},"body":{"injectables/ReminderService.html":{}}}],["form",{"_index":161,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.reset",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.valid",{"_index":175,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.value.deadline",{"_index":460,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["form.value.description",{"_index":461,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["form.value.email",{"_index":178,"title":{},"body":{"components/AuthComponent.html":{}}}],["form.value.name",{"_index":459,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["form.value.notification",{"_index":462,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["form.value.password",{"_index":180,"title":{},"body":{"components/AuthComponent.html":{}}}],["formdeadline",{"_index":407,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formdescription",{"_index":408,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formname",{"_index":409,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formnotification",{"_index":410,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formsmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["formátum",{"_index":633,"title":{},"body":{"components/SettingsComponent.html":{}}}],["frontend",{"_index":694,"title":{},"body":{"index.html":{}}}],["full",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":734,"title":{},"body":{"index.html":{}}}],["generate",{"_index":713,"title":{},"body":{"index.html":{}}}],["generated",{"_index":696,"title":{},"body":{"index.html":{}}}],["get('http://localhost:3000/reminders",{"_index":609,"title":{},"body":{"injectables/ReminderService.html":{}}}],["getreminders",{"_index":581,"title":{},"body":{"injectables/ReminderService.html":{}}}],["getting",{"_index":688,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["go",{"_index":736,"title":{},"body":{"index.html":{}}}],["graph",{"_index":745,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":137,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["guard.ts",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.ts:14",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.ts:17",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handleauthentication",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleauthentication(email",{"_index":248,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["header",{"_index":307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["header.component.css",{"_index":308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":309,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":53,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":350,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["help",{"_index":735,"title":{},"body":{"index.html":{}}}],["home",{"_index":335,"title":{},"body":{"components/HeaderComponent.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":220,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["http://localhost:3000",{"_index":222,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["http://localhost:4200",{"_index":706,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":209,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["httpclientmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":283,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":280,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpinterceptor",{"_index":284,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":278,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["https://www.figma.com/file/hgzozrxdfcgk5hvkf8ckra/reminders",{"_index":691,"title":{},"body":{"index.html":{}}}],["id",{"_index":204,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/Reminder.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["id=0%3a1",{"_index":693,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["időpontja",{"_index":632,"title":{},"body":{"components/SettingsComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/SettingsComponent.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":370,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["information",{"_index":474,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AuthService.html":{},"injectables/ReminderService.html":{}},"body":{"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"coverage.html":{}}}],["injectables",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"overview.html":{}}}],["inline",{"_index":344,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["input",{"_index":324,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["input('modify",{"_index":438,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["input('reminder",{"_index":440,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["inputs",{"_index":415,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["intercept",{"_index":275,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":277,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":272,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":274,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:14",{"_index":276,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:17",{"_index":281,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":273,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interface",{"_index":201,"title":{"interfaces/AuthDataResponse.html":{}},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":202,"title":{},"body":{"interfaces/AuthDataResponse.html":{}}}],["invalidform",{"_index":411,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["isauth",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isauthenticated",{"_index":310,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isloading",{"_index":152,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["isloginmode",{"_index":153,"title":{},"body":{"components/AuthComponent.html":{}}}],["ismodify",{"_index":439,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["item",{"_index":546,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["item.component",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":547,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.html",{"_index":548,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts",{"_index":545,"title":{},"body":{"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":554,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:12",{"_index":555,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:13",{"_index":556,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:15",{"_index":560,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:17",{"_index":559,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:21",{"_index":557,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:25",{"_index":558,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:27",{"_index":553,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item/reminder",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["j",{"_index":537,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["jquery",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('userdata",{"_index":237,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["json.stringify(user",{"_index":252,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["karma",{"_index":730,"title":{},"body":{"index.html":{}}}],["keresztüli",{"_index":624,"title":{},"body":{"components/SettingsComponent.html":{}}}],["keyframes",{"_index":381,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["következ",{"_index":628,"title":{},"body":{"components/SettingsComponent.html":{}}}],["later",{"_index":649,"title":{},"body":{"classes/User.html":{}}}],["lds",{"_index":341,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["leírás",{"_index":638,"title":{},"body":{"components/SettingsComponent.html":{}}}],["list",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["list.component",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":487,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.html",{"_index":488,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts",{"_index":485,"title":{},"body":{"components/ReminderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":508,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:16",{"_index":509,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:18",{"_index":495,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:25",{"_index":496,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:29",{"_index":506,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:40",{"_index":497,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:63",{"_index":499,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:67",{"_index":503,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:72",{"_index":501,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list/reminder",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["literal",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadeduser",{"_index":238,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["loading",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["loadingspinnercomponent",{"_index":55,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["localstorage.removeitem('userdata",{"_index":246,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('userdata",{"_index":251,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["login",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["login(email",{"_index":243,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":244,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["mailen",{"_index":623,"title":{},"body":{"components/SettingsComponent.html":{}}}],["map",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReminderListComponent.html":{}}}],["map((reminders",{"_index":525,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["map((user",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["margin",{"_index":357,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["miscellaneous",{"_index":749,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":513,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["modalservice",{"_index":494,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["mode",{"_index":468,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["modified",{"_index":453,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["modifiedreq",{"_index":288,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["modify",{"_index":416,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["modifyevent",{"_index":569,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["module",{"_index":75,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":77,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":473,"title":{},"body":{"components/ReminderAddComponent.html":{},"index.html":{}}}],["move",{"_index":521,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["multi",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["módja4",{"_index":636,"title":{},"body":{"components/SettingsComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["navigate",{"_index":705,"title":{},"body":{"index.html":{}}}],["need",{"_index":597,"title":{},"body":{"injectables/ReminderService.html":{}}}],["new",{"_index":218,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"coverage.html":{},"index.html":{}}}],["newreminder",{"_index":504,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["newreminders",{"_index":604,"title":{},"body":{"injectables/ReminderService.html":{}}}],["next",{"_index":279,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(modifiedreq",{"_index":294,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(req",{"_index":287,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{}}}],["ngbmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":159,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["ngmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":312,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/SettingsComponent.html":{}}}],["none",{"_index":479,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notifcation",{"_index":467,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notifed",{"_index":471,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notification",{"_index":392,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["null",{"_index":163,"title":{},"body":{"components/AuthComponent.html":{}}}],["object",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["ondelete",{"_index":550,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["ondeleteitem",{"_index":490,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["ondeleteitem(reminder",{"_index":498,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["ondestroy",{"_index":486,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["onlogout",{"_index":313,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onmodify",{"_index":551,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["onmodifyitem",{"_index":491,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifyitem(reminder",{"_index":500,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifysaved",{"_index":492,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifysaved(newreminder",{"_index":502,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onreminderclicked",{"_index":552,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["onreminderpage",{"_index":314,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsubmit",{"_index":154,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["onsubmit(form",{"_index":158,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["onswitchmode",{"_index":155,"title":{},"body":{"components/AuthComponent.html":{}}}],["open",{"_index":493,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["open(content",{"_index":505,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["out",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":435,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["output('ondelete",{"_index":566,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["output('onmodify",{"_index":568,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["output('savedmodify",{"_index":442,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["outputs",{"_index":417,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["overview",{"_index":738,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":673,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":741,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["password",{"_index":179,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["path",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":228,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderListComponent.html":{}}}],["pipe(take(1",{"_index":610,"title":{},"body":{"injectables/ReminderService.html":{}}}],["please",{"_index":464,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["position",{"_index":346,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["post('http://localhost:3000/reminders",{"_index":612,"title":{},"body":{"injectables/ReminderService.html":{}}}],["post(this.urlstr",{"_index":226,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"classes/User.html":{}}}],["prod",{"_index":721,"title":{},"body":{"index.html":{}}}],["production",{"_index":723,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":695,"title":{},"body":{"index.html":{}}}],["promise",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":150,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["protractor",{"_index":733,"title":{},"body":{"index.html":{}}}],["provide",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":217,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":388,"title":{},"body":{"classes/Reminder.html":{},"classes/User.html":{}}}],["put(`http://localhost:3000/reminders/${reminder.id",{"_index":614,"title":{},"body":{"injectables/ReminderService.html":{}}}],["radius",{"_index":361,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["reason",{"_index":517,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["redirectto",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":740,"title":{},"body":{"index.html":{}}}],["register",{"_index":227,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["registered",{"_index":205,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{}}}],["relative",{"_index":347,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["reload",{"_index":708,"title":{},"body":{"index.html":{}}}],["remidner",{"_index":541,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["reminder",{"_index":59,"title":{"classes/Reminder.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["reminder'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["reminder.component.css",{"_index":481,"title":{},"body":{"components/ReminderComponent.html":{}}}],["reminder.component.html",{"_index":482,"title":{},"body":{"components/ReminderComponent.html":{}}}],["reminder.creation",{"_index":576,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.creation.tolocalestring",{"_index":529,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["reminder.deadline",{"_index":573,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.deadline.tolocalestring",{"_index":528,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["reminder.description",{"_index":531,"title":{},"body":{"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.model",{"_index":436,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.name",{"_index":527,"title":{},"body":{"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.name.touppercase().includes(text.touppercase",{"_index":606,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.notification",{"_index":530,"title":{},"body":{"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.service",{"_index":437,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["reminder/reminder",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["reminder/reminder.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["reminder/reminder.service",{"_index":327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reminderaddcomponent",{"_index":58,"title":{"components/ReminderAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["remindercomponent",{"_index":61,"title":{"components/ReminderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminderid",{"_index":588,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminderlistcomponent",{"_index":63,"title":{"components/ReminderListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminderlistitemcomponent",{"_index":65,"title":{"components/ReminderListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminders",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["reminders.map((reminder",{"_index":526,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["remindersearch",{"_index":315,"title":{},"body":{"components/HeaderComponent.html":{}}}],["remindersearch(input",{"_index":322,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reminderservice",{"_index":316,"title":{"injectables/ReminderService.html":{}},"body":{"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"coverage.html":{}}}],["remindersubscrtiption",{"_index":489,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["remindertomodify",{"_index":441,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["req",{"_index":282,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clone",{"_index":289,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["require",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resdata.id",{"_index":232,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["resdata.token",{"_index":233,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":478,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["response",{"_index":186,"title":{},"body":{"components/AuthComponent.html":{},"injectables/ReminderService.html":{}}}],["result",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.then",{"_index":516,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["results",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":176,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["ring",{"_index":342,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["rotate(0deg",{"_index":383,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":385,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["route",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":156,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["routermodule",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":133,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtesítés",{"_index":635,"title":{},"body":{"components/SettingsComponent.html":{}}}],["run",{"_index":702,"title":{},"body":{"index.html":{}}}],["running",{"_index":724,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":214,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{}}}],["save",{"_index":476,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["savedmodify",{"_index":413,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["savedreminder",{"_index":443,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["scaffolding",{"_index":712,"title":{},"body":{"index.html":{}}}],["search",{"_index":336,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ReminderService.html":{}}}],["search(text",{"_index":590,"title":{},"body":{"injectables/ReminderService.html":{}}}],["searching",{"_index":602,"title":{},"body":{"injectables/ReminderService.html":{}}}],["see",{"_index":472,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["select",{"_index":466,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectednotification",{"_index":412,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectoption",{"_index":414,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectoption(value",{"_index":427,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["serve",{"_index":703,"title":{},"body":{"index.html":{}}}],["server",{"_index":701,"title":{},"body":{"index.html":{}}}],["service",{"_index":522,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["setheaders",{"_index":290,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["settings",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.css",{"_index":617,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":618,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":68,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shared/loading",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["showing",{"_index":603,"title":{},"body":{"injectables/ReminderService.html":{}}}],["showingdescription",{"_index":549,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["sign",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{}}}],["signup",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(email",{"_index":223,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["sizing",{"_index":353,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["solid",{"_index":359,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["sor",{"_index":629,"title":{},"body":{"components/SettingsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["spec\\.ts",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":339,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["spinner.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["spinner.component.css",{"_index":340,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":338,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/.../environment.prod.ts",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts",{"_index":147,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:14",{"_index":168,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:15",{"_index":167,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:16",{"_index":157,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:20",{"_index":162,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":160,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":203,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:23",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:40",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:75",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/user.model.ts",{"_index":639,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/auth/user.model.ts:1",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:4",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:5",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:9",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["src/app/header/header.component.ts",{"_index":306,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":317,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":319,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:28",{"_index":318,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:32",{"_index":321,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:36",{"_index":323,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:40",{"_index":320,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/reminder/reminder",{"_index":402,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.component.ts",{"_index":480,"title":{},"body":{"components/ReminderComponent.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.component.ts:11",{"_index":484,"title":{},"body":{"components/ReminderComponent.html":{}}}],["src/app/reminder/reminder.component.ts:8",{"_index":483,"title":{},"body":{"components/ReminderComponent.html":{}}}],["src/app/reminder/reminder.model.ts",{"_index":387,"title":{},"body":{"classes/Reminder.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.model.ts:1",{"_index":395,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:3",{"_index":399,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:4",{"_index":400,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:5",{"_index":397,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:6",{"_index":396,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:7",{"_index":398,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:8",{"_index":401,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.service.ts",{"_index":577,"title":{},"body":{"injectables/ReminderService.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.service.ts:11",{"_index":599,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:22",{"_index":601,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:24",{"_index":583,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:28",{"_index":591,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:40",{"_index":589,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:50",{"_index":585,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:71",{"_index":594,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:86",{"_index":587,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":616,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:12",{"_index":620,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:8",{"_index":619,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/loading",{"_index":337,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":689,"title":{"index.html":{}},"body":{}}],["state",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":718,"title":{},"body":{"index.html":{}}}],["string",{"_index":207,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{}}}],["style",{"_index":562,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["submit",{"_index":475,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["subscribe((reminders",{"_index":532,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["subscribe((response",{"_index":611,"title":{},"body":{"injectables/ReminderService.html":{}}}],["subscription",{"_index":326,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{}}}],["support",{"_index":742,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":743,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{}}}],["sza?node",{"_index":692,"title":{},"body":{"index.html":{}}}],["szintaktikája",{"_index":627,"title":{},"body":{"components/SettingsComponent.html":{}}}],["szöveges",{"_index":637,"title":{},"body":{"components/SettingsComponent.html":{}}}],["table",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/ReminderService.html":{}}}],["take(1",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["tap",{"_index":212,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["tap((resdata",{"_index":230,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":727,"title":{},"body":{"index.html":{}}}],["tests",{"_index":726,"title":{},"body":{"index.html":{}}}],["text",{"_index":592,"title":{},"body":{"injectables/ReminderService.html":{}}}],["textarea",{"_index":477,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this._token",{"_index":650,"title":{},"body":{"classes/User.html":{}}}],["this.allreminders",{"_index":600,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.allreminders.filter((reminder",{"_index":605,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.authservice.autologin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(email",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":334,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.signup(email",{"_index":184,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.user.pipe",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.user.subscribe((user",{"_index":329,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.deleteevent.emit(this.reminder",{"_index":571,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.error",{"_index":192,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.formdeadline",{"_index":447,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formdescription",{"_index":449,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formname",{"_index":445,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formnotification",{"_index":451,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.getreminders",{"_index":613,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.handleauthentication(resdata.email",{"_index":231,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.http",{"_index":225,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["this.invalidform",{"_index":458,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.isauthenticated",{"_index":330,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isloading",{"_index":182,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.isloginmode",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.modalservice",{"_index":511,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.modifyevent.emit(this.reminder",{"_index":572,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.reminders",{"_index":533,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminders.next(newreminders",{"_index":607,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.reminders.next(this.allreminders",{"_index":608,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.reminderservice.createreminder",{"_index":463,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.reminderservice.deletereminder(reminder.id",{"_index":535,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.getreminders",{"_index":534,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.reminders",{"_index":520,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.search(input",{"_index":333,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.reminderservice.updatereminder(newreminder",{"_index":538,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindersubscrtiption",{"_index":519,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindersubscrtiption.unsubscribe",{"_index":510,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindertomodify",{"_index":444,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["this.remindertomodify.deadline",{"_index":448,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.description",{"_index":450,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.id",{"_index":454,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.name",{"_index":446,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.notification",{"_index":452,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.router.createurltree(['/auth",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/auth",{"_index":247,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/reminders",{"_index":187,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.url",{"_index":332,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.savedreminder.emit(modified",{"_index":455,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.selectednotification",{"_index":457,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.showingdescription",{"_index":570,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.user.next(loadeduser",{"_index":242,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.user.next(null",{"_index":245,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.user.next(user",{"_index":250,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.usersub",{"_index":328,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.usersub.unsubscribe",{"_index":331,"title":{},"body":{"components/HeaderComponent.html":{}}}],["timeout",{"_index":213,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["timeout(10000",{"_index":229,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["timeouterror",{"_index":191,"title":{},"body":{"components/AuthComponent.html":{}}}],["times",{"_index":542,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["title",{"_index":515,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["token",{"_index":206,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["tokenexpiration",{"_index":648,"title":{},"body":{"classes/User.html":{}}}],["transform",{"_index":382,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["transition",{"_index":563,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["transparent",{"_index":372,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["trigger",{"_index":564,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["true",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/ReminderAddComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":725,"title":{},"body":{"index.html":{}}}],["up",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{}}}],["updatereminder",{"_index":582,"title":{},"body":{"injectables/ReminderService.html":{}}}],["updatereminder(reminder",{"_index":593,"title":{},"body":{"injectables/ReminderService.html":{}}}],["urlstr",{"_index":221,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["urltree",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":714,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":215,"title":{"classes/User.html":{}},"body":{"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(email",{"_index":249,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["user(userdata.email",{"_index":239,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["user.model",{"_index":216,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["user.token",{"_index":293,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["userdata",{"_index":235,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata._token",{"_index":241,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata.id",{"_index":240,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["usersub",{"_index":311,"title":{},"body":{"components/HeaderComponent.html":{}}}],["value",{"_index":165,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":750,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":699,"title":{},"body":{"index.html":{}}}],["via",{"_index":729,"title":{},"body":{"index.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["want",{"_index":647,"title":{},"body":{"classes/User.html":{}}}],["web",{"_index":469,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["width",{"_index":348,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["wireframe",{"_index":690,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nAppModule -->\n\nLoadingSpinnerComponent->AppModule\n\n\n\n\n\nReminderAddComponent\n\nReminderAddComponent\n\nAppModule -->\n\nReminderAddComponent->AppModule\n\n\n\n\n\nReminderComponent\n\nReminderComponent\n\nAppModule -->\n\nReminderComponent->AppModule\n\n\n\n\n\nReminderListComponent\n\nReminderListComponent\n\nAppModule -->\n\nReminderListComponent->AppModule\n\n\n\n\n\nReminderListItemComponent\n\nReminderListItemComponent\n\nAppModule -->\n\nReminderListItemComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            ReminderAddComponent\n                        \n                        \n                            ReminderComponent\n                        \n                        \n                            ReminderListComponent\n                        \n                        \n                            ReminderListItemComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ReminderComponent } from './reminder/reminder.component';\nimport { ReminderListComponent } from './reminder/reminder-list/reminder-list.component';\nimport { ReminderAddComponent } from './reminder/reminder-add/reminder-add.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner.component';\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\nimport { ReminderListItemComponent } from './reminder/reminder-list/reminder-list-item/reminder-list-item.component';\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    HeaderComponent,\n    ReminderComponent,\n    ReminderListComponent,\n    ReminderAddComponent,\n    SettingsComponent,\n    LoadingSpinnerComponent,\n    ReminderListItemComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgbModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n    NgbModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { ReminderComponent } from './reminder/reminder.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nimport { AuthGuard } from './auth/auth-guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'reminders', pathMatch: 'full' },\n  { path: 'auth', component: AuthComponent },\n  {\n    path: 'reminders',\n    component: ReminderComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                isLoginMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                onSwitchMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSwitchMode\n                        \n                        \n                    \n                \n            \n            \n                \nonSwitchMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthDataResponse, AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n})\nexport class AuthComponent {\n  isLoginMode = true;\n  isLoading = false;\n  error = null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const email = form.value.email;\n    const password = form.value.password;\n\n    let authObserver: Observable;\n\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      authObserver = this.authService.login(email, password);\n    } else {\n      authObserver = this.authService.signup(email, password);\n    }\n\n    authObserver.subscribe(\n      (response) => {\n        this.isLoading = false;\n        this.router.navigate(['/reminders']);\n      },\n      (errorMessage) => {\n        console.log(errorMessage);\n        if (errorMessage.name === 'TimeoutError') {\n          this.error = errorMessage.message;\n        } else {\n          this.error = errorMessage.status + ' - ' + errorMessage.statusText;\n        }\n        this.isLoading = false;\n      }\n    );\n\n    form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ error }}\n    \n    \n      \n    \n\n    \n      \n        Email\n        \n      \n      \n        Password\n        \n      \n      \n        \n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        \n        |\n        \n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ error }}                                    Email                            Password                                      {{ isLoginMode ? \"Login\" : \"Sign Up\" }}                |                  Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDataResponse.html":{"url":"interfaces/AuthDataResponse.html","title":"interface - AuthDataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        errorMessage\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        registered\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { tap, timeout } from 'rxjs/operators';\nimport { User } from './user.model';\n\nexport interface AuthDataResponse {\n  email: string;\n  token: string;\n  registered?: boolean;\n  id: string;\n  errorMessage: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  urlStr = 'http://localhost:3000';\n\n  signup(email: string, password: string) {\n    console.log(this.urlStr);\n    return this.http\n      .post(this.urlStr + '/register', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(resData.email, resData.id, resData.token);\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(userData.email, userData.id, userData._token);\n    this.user.next(loadedUser);\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + '/login', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(resData.email, resData.id, resData.token);\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    localStorage.removeItem('userData');\n    this.router.navigate(['/auth']);\n  }\n\n  private handleAuthentication(email: string, id: string, token: string) {\n    const user = new User(email, id, token);\n    this.user.next(user);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable\n    | Promise {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-interceptor.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\nimport { exhaustMap, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          setHeaders: { Authorization: `Bearer ${user.token}` },\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlStr\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                    Private\n                                handleAuthentication\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \nautoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthentication(email: string, id: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { tap, timeout } from 'rxjs/operators';\nimport { User } from './user.model';\n\nexport interface AuthDataResponse {\n  email: string;\n  token: string;\n  registered?: boolean;\n  id: string;\n  errorMessage: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  urlStr = 'http://localhost:3000';\n\n  signup(email: string, password: string) {\n    console.log(this.urlStr);\n    return this.http\n      .post(this.urlStr + '/register', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(resData.email, resData.id, resData.token);\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(userData.email, userData.id, userData._token);\n    this.user.next(loadedUser);\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + '/login', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(resData.email, resData.id, resData.token);\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    localStorage.removeItem('userData');\n    this.router.navigate(['/auth']);\n  }\n\n  private handleAuthentication(email: string, id: string, token: string) {\n    const user = new User(email, id, token);\n    this.user.next(user);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onReminderPage\n                            \n                            \n                                reminderSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, reminderService: ReminderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReminderPage\n                        \n                        \n                    \n                \n            \n            \n                \nonReminderPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reminderSearch\n                        \n                        \n                    \n                \n            \n            \n                \nreminderSearch(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\nimport { ReminderService } from '../reminder/reminder.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  isAuthenticated = false;\n  private userSub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private reminderService: ReminderService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user.subscribe((user) => {\n      this.isAuthenticated = !!user;\n    });\n  }\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n  onReminderPage() {\n    return this.router.url === '/reminders';\n  }\n\n  reminderSearch(input) {\n    this.reminderService.search(input);\n  }\n\n  onLogout() {\n    if (!this.isAuthenticated) {\n      return;\n    }\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  Reminders\n  \n    \n  \n\n  \n    \n      \n        Home \n      \n      \n        Settings\n      \n    \n\n    \n      {{ !isAuthenticated ? \"Login\" : \"Logout\" }}\n    \n    \n      \n      \n        Search\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reminders                            Home                     Settings                    {{ !isAuthenticated ? \"Login\" : \"Logout\" }}                            Search            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/loading-spinner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n            \n                styleUrls\n                ./loading-spinner.component.css\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  styleUrls: ['./loading-spinner.component.css'],\n  template:\n    '',\n})\nexport class LoadingSpinnerComponent {}\n\n    \n\n\n    \n                \n                    ./loading-spinner.component.css\n                \n                .lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #212529;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #212529 transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reminder.html":{"url":"classes/Reminder.html","title":"class - Reminder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reminder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reminder/reminder.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                creation\n                            \n                            \n                                    Public\n                                deadline\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, deadline: Date, creation: Date, description: string, notification: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deadline\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creation\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reminder {\n  constructor(\n    public id: string,\n    public name: string,\n    public deadline: Date,\n    public creation: Date,\n    public description: string,\n    public notification: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderAddComponent.html":{"url":"components/ReminderAddComponent.html","title":"component - ReminderAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-add/reminder-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-add\n            \n\n            \n                styleUrls\n                ./reminder-add.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formDeadline\n                            \n                            \n                                formDescription\n                            \n                            \n                                formName\n                            \n                            \n                                formNotification\n                            \n                            \n                                invalidForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                selectedNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                savedModify\n                            \n                            \n                                selectOption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modify\n                            \n                            \n                                reminder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                savedModify\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(reminderService: ReminderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-add/reminder-add.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modify\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reminder\n                    \n                \n                \n                    \n                        Type :         Reminder\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        savedModify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            savedModify\n                        \n                        \n                    \n                \n            \n            \n                \nsavedModify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formDeadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Reminder } from '../reminder.model';\nimport { ReminderService } from '../reminder.service';\n\n@Component({\n  selector: 'app-reminder-add',\n  templateUrl: './reminder-add.component.html',\n  styleUrls: ['./reminder-add.component.css'],\n})\nexport class ReminderAddComponent implements OnInit {\n  @Input('modify') isModify = false;\n\n  @Input('reminder') remindertoModify: Reminder;\n\n  @Output('savedModify') savedReminder = new EventEmitter();\n\n  formName: string;\n  formDeadline: Date;\n  formDescription: string;\n  formNotification: string;\n\n  isLoading = false;\n  invalidForm = false;\n  selectedNotification: string;\n\n  constructor(private reminderService: ReminderService) {}\n  ngOnInit(): void {\n    if (this.remindertoModify) {\n      this.formName = this.remindertoModify.name;\n      this.formDeadline = this.remindertoModify.deadline;\n      this.formDescription = this.remindertoModify.description;\n      this.formNotification = this.remindertoModify.notification;\n    }\n  }\n\n  savedModify() {\n    let modified = new Reminder(\n      this.remindertoModify.id,\n      this.formName,\n      this.formDeadline,\n      new Date(),\n      this.formDescription,\n      this.formNotification\n    );\n    this.savedReminder.emit(modified);\n    console.log(this.formName);\n  }\n\n  selectOption(value) {\n    this.selectedNotification = value;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      this.invalidForm = true;\n      return;\n    }\n    this.invalidForm = false;\n\n    const name = form.value.name;\n    const deadline = form.value.deadline;\n    const description = form.value.description;\n    const notification = form.value.notification;\n    const creation = new Date();\n\n    this.reminderService.createReminder(\n      name,\n      deadline,\n      creation,\n      description,\n      notification\n    );\n\n    form.reset();\n  }\n}\n\n    \n\n    \n        Add a new Reminder\n\n\n\n  \n    \n  \n\n  \n    \n      Reminder name\n      \n      Please choose a name.\n    \n    \n      Deadline\n      \n    \n\n    \n      Description\n      \n    \n\n    Select Notifcation Mode\n    \n      Web notification\n      Email\n      API\n    \n\n    \n      \n      \n        You will be notifed on your registered email.\n      \n    \n\n    \n      \n      \n        See the settings for more information.\n      \n    \n\n    \n      \n      Submit\n    \n  \n\n  \n    \n      Save\n    \n  \n\n\n    \n\n    \n                \n                    ./reminder-add.component.css\n                \n                textarea {\n  resize: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add a new Reminder                    Reminder name            Please choose a name.              Deadline                    Description              Select Notifcation Mode          Web notification      Email      API                            You will be notifed on your registered email.                                  See the settings for more information.                          Submit                  Save      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderComponent.html":{"url":"components/ReminderComponent.html","title":"component - ReminderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder\n            \n\n            \n                styleUrls\n                ./reminder.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reminder',\n  templateUrl: './reminder.component.html',\n  styleUrls: ['./reminder.component.css'],\n})\nexport class ReminderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./reminder.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderListComponent.html":{"url":"components/ReminderListComponent.html","title":"component - ReminderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-list/reminder-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-list\n            \n\n            \n                styleUrls\n                ./reminder-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reminders\n                            \n                            \n                                reminderSubscrtiption\n                            \n                            \n                                remindertoModify\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteItem\n                            \n                            \n                                onModifyItem\n                            \n                            \n                                onModifySaved\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(reminderService: ReminderService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-list/reminder-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteItem\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteItem(reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModifyItem\n                        \n                        \n                    \n                \n            \n            \n                \nonModifyItem(reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModifySaved\n                        \n                        \n                    \n                \n            \n            \n                \nonModifySaved(newReminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newReminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminderSubscrtiption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remindertoModify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reminder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ReminderService } from '../reminder.service';\nimport { Reminder } from '../reminder.model';\n\n@Component({\n  selector: 'app-reminder-list',\n  templateUrl: './reminder-list.component.html',\n  styleUrls: ['./reminder-list.component.css'],\n})\nexport class ReminderListComponent implements OnInit, OnDestroy {\n  reminders = [];\n  reminderSubscrtiption: Subscription;\n\n  remindertoModify: Reminder;\n\n  constructor(\n    private reminderService: ReminderService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnDestroy(): void {\n    this.reminderSubscrtiption.unsubscribe();\n  }\n\n  open(content) {\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-basic-title' })\n      .result.then(\n        (result) => {},\n        (reason) => {\n          console.log(reason);\n        }\n      );\n  }\n\n  ngOnInit(): void {\n    this.reminderSubscrtiption = this.reminderService.reminders\n      .pipe(\n        // move map to service when backkend is done\n        map((reminders) => {\n          return reminders.map((reminder) => {\n            return {\n              name: reminder.name,\n              deadline: reminder.deadline.toLocaleString(),\n              creation: reminder.creation.toLocaleString(),\n              notification: reminder.notification,\n              description: reminder.description,\n            };\n          });\n        })\n      )\n      .subscribe((reminders) => {\n        this.reminders = reminders;\n      });\n\n    this.reminderService.getReminders();\n  }\n\n  onDeleteItem(reminder) {\n    this.reminderService.deleteReminder(reminder.id);\n  }\n\n  onModifySaved(newReminder) {\n    console.log('elmentett új', newReminder);\n    this.reminderService.updateReminder(newReminder);\n  }\n\n  onModifyItem(reminder) {\n    this.remindertoModify = reminder;\n  }\n}\n\n    \n\n    \n        Current Reminders\n\n\n  \n    Reminder name\n    Deadline\n    Notification\n    Action\n  \n\n  \n\n  \n  \n    \n      Modify Reminder\n      \n         × \n      \n    \n    \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Modify Remidner\n          \n            &times;\n          \n        \n        ...\n        \n          \n            Close\n          \n          Save changes\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reminder-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Current Reminders      Reminder name    Deadline    Notification    Action                  Modify Reminder               ×                                                           Modify Remidner                      ×                          ...                              Close                    Save changes                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderListItemComponent.html":{"url":"components/ReminderListItemComponent.html","title":"component - ReminderListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-list-item\n            \n\n            \n                styleUrls\n                ./reminder-list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showingDescription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onModify\n                            \n                            \n                                onReminderClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reminder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onModify\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reminder\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onModify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModify\n                        \n                        \n                    \n                \n            \n            \n                \nonModify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReminderClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonReminderClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showingDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Reminder } from '../../reminder.model';\n\n@Component({\n  selector: 'app-reminder-list-item',\n  templateUrl: './reminder-list-item.component.html',\n  styleUrls: ['./reminder-list-item.component.css'],\n})\nexport class ReminderListItemComponent {\n  @Input() reminder;\n  @Output('onDelete') deleteEvent = new EventEmitter();\n  @Output('onModify') modifyEvent = new EventEmitter();\n\n  showingDescription = false;\n\n  onReminderClicked() {\n    this.showingDescription = !this.showingDescription;\n  }\n\n  onDelete() {\n    this.deleteEvent.emit(this.reminder);\n  }\n\n  onModify() {\n    this.modifyEvent.emit(this.reminder);\n  }\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ reminder.name }}\n  {{ reminder.deadline }}\n  {{ reminder.notification }}\n  \n    \n      Modify\n    \n    \n      Delete\n    \n  \n\n\n  \n    {{ reminder.description }}\n    \n    \n      \n        Modify\n      \n      \n        Delete\n      \n    \n    Created at {{ reminder.creation }}\n  \n\n\n    \n\n    \n                \n                    ./reminder-list-item.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ reminder.name }}  {{ reminder.deadline }}  {{ reminder.notification }}            Modify              Delete            {{ reminder.description }}                      Modify                    Delete              Created at {{ reminder.creation }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReminderService.html":{"url":"injectables/ReminderService.html","title":"injectable - ReminderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReminderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reminder/reminder.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allReminders\n                            \n                            \n                                reminders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReminder\n                            \n                            \n                                deleteReminder\n                            \n                            \n                                getReminders\n                            \n                            \n                                search\n                            \n                            \n                                updateReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReminder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReminder(name: string, deadline: Date, creation: Date, description: string, notification: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deadline\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creation\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    notification\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteReminder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteReminder(reminderid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminderid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReminders\n                        \n                        \n                    \n                \n            \n            \n                \ngetReminders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateReminder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateReminder(reminder: Reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n                                    \n                                                Reminder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allReminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reminder[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: '1',\n      name: 'Buy food',\n      deadline: new Date(),\n      creation: new Date(),\n      notification: 'email',\n      description: ' I need to buy food to not die.',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.allReminders\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Reminder } from './reminder.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ReminderService {\n  // this is for searching\n  allReminders: Reminder[] = [\n    {\n      id: '1',\n      name: 'Buy food',\n      deadline: new Date(),\n      creation: new Date(),\n      notification: 'email',\n      description: ' I need to buy food to not die.',\n    },\n  ];\n  //this is what we showing\n  reminders: BehaviorSubject = new BehaviorSubject(\n    this.allReminders\n  );\n\n  constructor(private http: HttpClient) {}\n\n  search(text: string) {\n    if (text) {\n      let newReminders = this.allReminders.filter((reminder) =>\n        reminder.name.toUpperCase().includes(text.toUpperCase())\n      );\n\n      this.reminders.next(newReminders);\n      return;\n    }\n    this.reminders.next(this.allReminders);\n  }\n\n  getReminders() {\n    this.http\n      .get('http://localhost:3000/reminders', {})\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.allReminders = response;\n        this.reminders.next(this.allReminders);\n      });\n  }\n\n  createReminder(\n    name: string,\n    deadline: Date,\n    creation: Date,\n    description: string,\n    notification: string\n  ) {\n    this.http\n      .post('http://localhost:3000/reminders', {\n        name: name,\n        deadline: deadline,\n        description: description,\n        notification: notification,\n        creation: creation,\n      })\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n\n  updateReminder(reminder: Reminder) {\n    this.http\n      .put(`http://localhost:3000/reminders/${reminder.id}`, {\n        name: reminder.name,\n        deadline: reminder.deadline,\n        description: reminder.description,\n        notification: reminder.notification,\n        creation: reminder.creation,\n      })\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n\n  deleteReminder(reminderid) {\n    this.http\n      .delete(`http:/localhost:3000/reminders/${reminderid}`)\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Email Settings\n      \n        Az e-mailen keresztüli emlékeztető felvételének szintaktikája következő:\n        1. sor: emlékeztető címe 2. sor: emlékeztető időpontja\n        (Formátum: ) 3. sor: értesítés módja4+. sor: szöveges leírás\n      \n    \n    \n      API Settings\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Email Settings              Az e-mailen keresztüli emlékeztető felvételének szintaktikája következő:        1. sor: emlékeztető címe 2. sor: emlékeztető időpontja        (Formátum: ) 3. sor: értesítés módja4+. sor: szöveges leírás                    API Settings            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, id: string, _token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/user.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class User {\n  //might want to add tokenexpiration later\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string\n  ) {}\n\n  get token() {\n    return this._token;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthDataResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-add/reminder-add.component.ts\n            \n            component\n            ReminderAddComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts\n            \n            component\n            ReminderListItemComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-list/reminder-list.component.ts\n            \n            component\n            ReminderListComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.component.ts\n            \n            component\n            ReminderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.model.ts\n            \n            class\n            Reminder\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.service.ts\n            \n            injectable\n            ReminderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/localize : ~10.2.0\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            bootstrap : ^4.5.3\n        \n            jquery : ^3.5.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWireFrame: https://www.figma.com/file/hgZOZrxDfCgk5hvKf8ckRa/Reminders-Sza?node-id=0%3A1\nFrontend\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nAppModule -->\n\nLoadingSpinnerComponent->AppModule\n\n\n\n\n\nReminderAddComponent\n\nReminderAddComponent\n\nAppModule -->\n\nReminderAddComponent->AppModule\n\n\n\n\n\nReminderComponent\n\nReminderComponent\n\nAppModule -->\n\nReminderComponent->AppModule\n\n\n\n\n\nReminderListComponent\n\nReminderListComponent\n\nAppModule -->\n\nReminderListComponent->AppModule\n\n\n\n\n\nReminderListItemComponent\n\nReminderListItemComponent\n\nAppModule -->\n\nReminderListItemComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
