var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.249,1,0.674]],["body/components/AdminComponent.html",[0,0.376,1,1.1,2,1.286,3,0.277,4,0.236,5,1.013,6,1.013,7,1.013,8,0.236,9,2.397,10,1.542,11,2.137,12,1.013,13,2.087,14,1.74,15,3.58,16,1.542,17,4.018,18,0.321,19,0.975,20,3.58,21,0.975,22,2.549,23,4.018,24,0.52,25,2.89,26,3.076,27,0.898,28,4.018,29,0.886,30,0.036,31,0.718,32,0.511,33,0.802,34,2.89,35,0.975,36,1.478,37,4.018,38,2.89,39,3.312,40,1.013,41,1.013,42,0.511,43,0.321,44,2.89,45,0.277,46,0.157,47,0.77,48,2.89,49,2.89,50,2.89,51,2.89,52,1.542,53,3.333,54,2.544,55,2.881,56,2.881,57,2.275,58,2.881,59,0.844,60,1.408,61,1.408,62,1.013,63,1.598,64,1.013,65,1.013,66,0.701,67,1.013,68,0.637,69,1.013,70,0.701,71,1.013,72,0.701,73,1.013,74,1.013,75,0.701,76,1.121,77,1.013,78,0.637,79,1.013,80,0.701,81,1.013,82,0.701,83,0.844,84,1.013,85,0.637,86,0.925,87,1.013,88,1.013,89,0.016,90,0.023,91,0.016]],["title/guards/AdminGuard.html",[92,1.936,93,1.936]],["body/guards/AdminGuard.html",[3,0.325,4,0.276,8,0.276,10,1.3,18,0.377,21,1.086,24,0.609,27,0.805,29,0.986,30,0.036,31,0.643,32,0.569,33,0.893,35,0.822,42,0.704,43,0.377,45,0.325,46,0.184,47,0.902,57,1.917,89,0.019,90,0.025,91,0.019,93,2.833,94,2.428,95,4.156,96,2.428,97,3.974,98,1.567,99,1.822,100,2.964,101,2.808,102,2.808,103,4.421,104,3.593,105,4.421,106,2.808,107,3.711,108,1.883,109,4.156,110,3.173,111,3.711,112,1.307,113,1.425,114,0.989,115,1.728,116,2.144,117,1.3,118,1.917,119,1.567,120,1.425,121,1.425,122,1.464,123,2.428,124,2.144,125,2.808,126,1.567,127,3.711,128,1.3,129,1.728,130,3.386,131,2.808]],["title/injectables/AdminService.html",[26,1.731,112,0.893]],["body/injectables/AdminService.html",[3,0.319,4,0.271,8,0.271,18,0.37,19,1.073,20,3.795,21,1.073,24,0.598,26,2.504,27,0.952,29,0.975,30,0.036,31,0.636,32,0.423,33,0.882,35,1.073,36,1.415,39,3.562,40,1.166,41,1.166,42,0.7,43,0.37,45,0.319,46,0.18,47,0.887,52,1.697,55,2.386,56,2.386,57,1.884,89,0.019,90,0.025,91,0.019,108,1.4,112,1.292,114,0.972,115,1.698,117,1.277,119,1.539,120,1.4,122,1.292,132,2.106,133,2.386,134,4.421,135,4.39,136,2.386,137,2.997,138,4.421,139,2.257,140,3.667,141,3.326,142,3.326,143,1.549,144,2.8,145,1.539,146,1.884,147,2.106,148,1.4,149,2.386,150,1.539,151,2.106,152,1.697,153,2.257,154,2.504,155,2.759,156,1.884,157,2.759,158,2.759,159,2.759,160,2.759,161,3.667,162,2.759,163,2.759,164,2.759]],["title/components/AppComponent.html",[0,0.249,66,0.742]],["body/components/AppComponent.html",[0,0.405,1,0.735,2,1.417,3,0.32,4,0.272,5,1.168,6,1.168,7,1.168,8,0.272,10,1.7,11,2.301,12,1.168,13,2.136,14,1.781,16,1.7,18,0.371,21,1.075,22,2.704,24,0.6,27,0.797,29,0.735,30,0.035,31,0.715,32,0.424,33,0.665,35,0.809,36,1.067,42,0.563,43,0.371,45,0.32,46,0.181,47,0.889,59,0.974,60,1.552,61,1.552,62,1.168,63,1.695,64,1.168,65,1.168,66,1.286,67,1.168,68,0.735,69,1.168,70,0.809,71,1.168,72,0.809,73,1.168,74,1.168,75,0.809,76,1.207,77,1.168,78,0.735,79,1.168,80,0.809,81,1.168,82,0.809,83,0.974,84,1.168,85,0.735,86,1.067,87,1.168,88,1.168,89,0.019,90,0.025,91,0.019,98,1.543,99,1.814,118,1.888,120,1.864,165,1.28,166,2.765,167,1.7,168,4.972,169,4.428,170,3.334,171,3.334,172,3.334,173,3.334]],["title/modules/AppModule.html",[174,1.936,175,1.936]],["body/modules/AppModule.html",[1,1.164,3,0.254,4,0.216,8,0.216,14,0.774,30,0.036,42,0.774,43,0.294,45,0.254,46,0.144,59,0.774,66,1.423,68,1.164,70,1.281,72,1.281,75,1.281,78,1.164,80,1.281,82,1.281,83,1.104,85,1.164,89,0.015,90,0.021,91,0.015,129,1.352,145,1.225,174,1.677,175,3.97,176,1.499,177,1.677,178,3.653,179,3.041,180,3.653,181,1.899,182,2.196,183,2.196,184,2.196,185,2.196,186,2.196,187,2.99,188,2.99,189,3.134,190,2.196,191,1.899,192,2.648,193,3.134,194,3.778,195,3.134,196,1.899,197,3.134,198,3.778,199,1.677,200,3.778,201,3.778,202,3.778,203,2.648,204,2.648,205,2.648,206,2.196,207,2.648,208,2.196,209,4.404,210,2.392,211,2.648,212,1.899,213,2.648,214,2.196,215,2.648,216,2.648,217,2.196,218,2.648,219,1.899,220,2.648,221,4.404,222,1.677,223,1.899,224,2.196,225,2.648,226,2.648,227,2.648]],["title/modules/AppRoutingModule.html",[174,1.936,187,1.731]],["body/modules/AppRoutingModule.html",[0,0.45,1,1.046,3,0.356,4,0.302,8,0.302,15,2.659,30,0.036,42,0.764,43,0.412,45,0.356,46,0.201,68,1.046,78,1.046,85,1.046,86,1.187,89,0.021,90,0.027,91,0.021,92,3.005,93,3.005,97,3.754,113,1.561,126,1.716,176,2.1,181,2.659,187,2.688,193,3.076,197,3.937,206,3.076,208,3.076,214,3.076,217,3.076,224,3.076,228,3.708,229,3.708,230,3.315,231,4.746,232,3.315,233,3.708,234,5.704,235,3.708,236,2.688,237,3.708,238,3.708,239,2.348,240,3.708]],["title/components/AuthComponent.html",[0,0.249,68,0.674]],["body/components/AuthComponent.html",[0,0.333,1,0.511,2,1.097,3,0.222,4,0.189,5,0.812,6,0.812,7,0.812,8,0.189,12,0.812,13,2.002,14,1.669,16,1.316,18,0.258,19,0.832,21,0.832,24,0.417,27,0.907,29,0.756,30,0.036,31,0.649,32,0.519,33,0.684,35,0.832,36,1.097,40,1.43,41,1.43,42,0.612,43,0.258,45,0.222,46,0.126,47,0.617,52,1.566,59,0.677,60,1.201,61,1.201,62,0.812,63,1.444,64,0.812,65,0.812,66,0.562,67,0.812,68,0.994,69,0.812,70,0.562,71,0.812,72,0.562,73,0.812,74,0.812,75,0.562,76,0.99,77,0.812,78,0.511,79,0.812,80,0.562,81,0.812,82,0.562,83,0.677,84,0.812,85,0.511,86,0.741,87,0.812,88,0.812,89,0.013,90,0.019,91,0.013,98,1.072,99,1.613,100,2.663,110,2.171,113,0.975,114,0.677,121,0.975,122,0.677,126,1.586,129,2.083,165,0.889,167,1.316,199,1.467,239,2.171,241,1.922,242,4.081,243,3.428,244,4.181,245,3.385,246,5.216,247,2.844,248,4.51,249,3.428,250,2.844,251,3.741,252,2.317,253,1.922,254,2.317,255,3.385,256,2.554,257,2.317,258,2.317,259,1.312,260,1.922,261,4.081,262,1.922,263,2.317,264,3.453,265,2.317,266,4.081,267,4.081,268,2.317,269,2.317,270,2.317,271,2.317,272,1.661,273,2.317,274,2.317,275,2.317,276,4.081,277,2.317,278,2.317,279,2.317,280,2.317,281,2.317,282,2.317,283,2.317,284,1.922,285,2.856,286,4.51,287,4.51,288,3.428]],["title/interfaces/AuthDataResponse.html",[150,1.415,259,1.731]],["body/interfaces/AuthDataResponse.html",[3,0.264,4,0.224,8,0.224,18,0.306,19,0.941,30,0.036,32,0.655,33,0.774,42,0.698,43,0.306,45,0.373,46,0.149,47,0.733,52,2.22,89,0.015,90,0.022,91,0.015,99,0.88,100,2.295,108,2.168,112,1.134,113,1.157,114,0.803,117,1.055,119,1.272,120,1.157,121,1.633,122,1.314,126,2.08,128,1.875,137,2.197,139,1.403,143,1.575,144,1.74,145,1.272,146,1.556,147,1.74,148,1.157,150,1.272,152,2.385,153,2.805,154,2.197,156,2.197,239,1.74,259,2.197,264,3.833,272,3.502,285,1.74,289,1.971,290,1.971,291,3.694,292,3.111,293,2.28,294,1.971,295,2.28,296,2.28,297,2.28,298,1.74,299,2.28,300,3.218,301,2.28,302,3.218,303,3.218,304,3.218,305,3.218,306,3.218,307,3.218,308,3.218,309,2.28,310,3.218,311,2.28,312,2.28,313,2.28,314,2.28,315,2.28,316,2.28,317,2.28,318,2.28,319,1.971,320,2.28,321,2.28,322,2.28,323,2.28,324,2.457,325,2.28,326,2.28,327,2.28,328,2.28]],["title/guards/AuthGuard.html",[92,1.936,232,1.936]],["body/guards/AuthGuard.html",[3,0.33,4,0.28,8,0.28,10,1.317,18,0.382,21,1.095,24,0.617,27,0.812,29,0.995,30,0.036,31,0.649,32,0.574,33,0.901,35,0.833,42,0.707,43,0.382,45,0.33,46,0.186,47,0.915,89,0.019,90,0.025,91,0.019,94,2.461,96,2.461,97,3.992,98,1.588,99,1.829,100,2.974,101,2.846,102,2.846,103,4.444,104,3.617,105,4.444,106,2.846,107,3.744,108,1.9,109,4.183,110,3.194,111,3.744,112,1.319,113,1.445,114,1.003,115,1.752,116,2.173,117,1.317,118,1.943,119,1.588,120,1.445,121,1.445,122,1.474,123,2.461,124,2.173,125,2.846,126,1.588,127,3.744,128,1.317,129,1.752,131,2.846,232,2.858,329,3.617]],["title/interceptors/AuthInterceptorService.html",[188,1.731,330,2.536]],["body/interceptors/AuthInterceptorService.html",[3,0.343,4,0.291,8,0.291,10,1.37,18,0.397,21,1.124,24,0.642,27,0.833,29,1.021,30,0.036,31,0.666,32,0.589,33,0.924,35,0.866,42,0.716,43,0.397,45,0.343,46,0.194,47,0.951,89,0.02,90,0.026,91,0.02,98,1.651,99,1.849,110,3.255,112,1.353,114,1.043,116,2.26,117,1.37,122,1.502,123,2.559,124,2.26,126,1.651,128,1.37,145,1.651,188,2.622,260,2.96,329,3.686,331,3.569,332,2.96,333,5.14,334,3.569,335,3.569,336,5.439,337,5.14,338,5.439,339,3.569,340,4.63,341,3.569,342,4.63,343,3.569,344,3.569,345,3.569,346,3.569,347,3.569,348,3.569,349,2.96,350,2.96,351,3.569,352,3.569]],["title/injectables/AuthService.html",[99,0.979,112,0.893]],["body/injectables/AuthService.html",[3,0.23,4,0.195,8,0.195,18,0.267,19,0.853,21,0.853,24,0.431,27,0.973,29,1.011,30,0.036,31,0.659,32,0.621,33,0.915,35,1.185,36,1.332,40,0.84,41,0.84,42,0.67,43,0.267,45,0.338,46,0.13,47,0.639,52,2.153,89,0.013,90,0.02,91,0.013,99,1.125,100,2.692,108,2.055,112,1.027,113,1.009,114,0.7,117,0.92,119,1.109,120,1.009,121,1.93,122,1.217,126,1.926,128,1.959,132,1.518,136,1.719,137,2.597,139,1.795,143,1.607,144,2.226,145,1.109,146,1.357,147,1.518,148,1.009,150,1.109,152,2.39,153,2.605,154,1.991,156,1.991,239,1.518,259,1.357,264,4.023,272,1.719,285,2.636,290,1.719,291,2.521,292,2.89,293,1.988,294,1.719,295,1.988,296,3.453,297,1.988,298,1.518,299,2.916,300,2.916,301,1.988,302,2.916,303,2.916,304,2.916,305,2.916,306,2.916,307,2.916,308,2.916,309,3.803,310,2.916,311,1.988,312,1.988,313,1.988,314,1.988,315,1.988,316,1.988,317,1.988,318,2.916,319,3.288,320,1.988,321,1.988,322,1.988,323,3.453,324,2.904,325,1.988,326,1.988,327,1.988,328,1.988,353,3.515,354,3.515,355,2.397,356,2.397,357,2.397,358,2.397,359,2.397,360,2.397,361,2.397]],["title/components/HeaderComponent.html",[0,0.249,70,0.742]],["body/components/HeaderComponent.html",[0,0.342,1,0.534,2,1.134,3,0.233,4,0.198,5,0.849,6,0.849,7,0.849,8,0.198,10,1.36,11,1.939,12,0.849,13,2.02,14,1.685,15,2.542,16,1.36,18,0.27,19,0.86,21,0.86,22,2.353,24,0.638,27,0.996,29,0.781,30,0.036,31,0.663,32,0.45,33,0.707,35,1.19,36,1.64,40,1.242,41,1.242,42,0.623,43,0.27,45,0.233,46,0.131,57,1.373,59,0.708,60,1.242,61,1.242,62,0.849,63,1.475,64,0.849,65,0.849,66,0.588,67,0.849,68,0.534,69,0.849,70,1.119,71,0.849,72,0.588,73,0.849,74,0.849,75,0.588,76,1.017,77,0.849,78,0.534,79,0.849,80,0.588,81,0.849,82,0.588,83,0.708,84,0.849,85,0.534,86,1.341,87,0.849,88,0.849,89,0.014,90,0.02,91,0.014,98,1.122,99,1.64,100,2.701,108,1.02,113,1.02,114,0.708,118,1.373,121,2.157,122,1.036,128,0.93,153,2.139,165,0.93,167,1.36,236,2.373,256,2.777,285,2.244,319,2.542,362,2.01,363,2.94,364,4.19,365,3.544,366,4.904,367,4.19,368,3.824,369,4.61,370,4.61,371,3.544,372,2.701,373,3.544,374,2.424,375,2.424,376,2.424,377,2.424,378,3.544,379,2.424,380,1.535,381,2.424,382,2.424,383,3.475,384,2.424,385,2.424,386,2.424,387,4.19,388,3.544,389,2.424,390,2.424,391,2.424,392,2.424,393,3.544,394,2.94]],["title/components/LoadingSpinnerComponent.html",[0,0.249,72,0.742]],["body/components/LoadingSpinnerComponent.html",[0,0.382,1,0.653,2,1.308,3,0.285,4,0.242,5,1.433,6,1.038,7,1.038,8,0.242,12,1.038,13,2.096,14,1.748,30,0.035,31,0.588,42,0.377,43,0.329,45,0.285,46,0.161,54,1.876,59,0.866,60,1.433,61,1.433,62,1.038,63,1.615,64,1.038,65,1.038,66,0.719,67,1.038,68,0.653,69,1.038,70,0.719,71,1.038,72,1.225,73,1.918,74,1.038,75,0.719,76,1.136,77,1.038,78,0.653,79,1.038,80,0.719,81,1.038,82,0.719,83,0.866,84,1.038,85,0.653,86,0.948,87,1.038,88,1.038,89,0.017,90,0.023,91,0.017,165,1.137,167,1.569,395,2.458,396,2.458,397,4.088,398,4.68,399,5.609,400,5.609,401,4.088,402,2.963,403,4.088,404,4.088,405,2.963,406,4.088,407,4.088,408,3.391,409,2.963,410,4.088,411,2.963,412,5.046,413,2.963,414,4.088,415,2.963,416,4.088,417,2.963,418,4.088,419,2.963,420,2.963,421,5.046,422,2.963,423,2.963,424,2.963,425,2.932,426,2.963,427,2.963,428,2.963,429,4.68,430,4.68,431,2.963,432,4.68,433,2.963,434,2.963,435,2.963,436,2.963,437,2.963,438,2.963,439,4.088,440,2.963,441,2.963,442,2.963]],["title/classes/Reminder.html",[46,0.166,76,0.742]],["body/classes/Reminder.html",[3,0.303,4,0.258,8,0.258,18,0.351,19,1.037,24,0.769,27,1.07,29,0.697,30,0.035,31,0.803,32,0.756,33,1.081,45,0.303,46,0.171,76,1.037,89,0.018,90,0.024,91,0.018,152,2.435,292,2.936,443,2.266,444,2.621,445,5.256,446,4.492,447,4.492,448,4.492,449,3.066,450,4.492,451,3.429,452,3.066,453,3.16,454,4.162,455,3.16,456,4.272,457,3.16,458,3.16,459,3.16,460,3.16,461,3.16,462,3.16,463,3.16,464,3.16,465,3.16]],["title/components/ReminderAddComponent.html",[0,0.249,75,0.742]],["body/components/ReminderAddComponent.html",[0,0.29,1,0.408,2,0.926,3,0.178,4,0.151,5,0.649,6,0.649,7,0.649,8,0.151,10,1.11,11,1.647,12,0.649,13,1.904,14,1.588,16,1.11,18,0.206,19,0.702,21,0.702,22,2.053,24,0.333,27,1.022,29,0.784,30,0.036,31,0.738,32,0.667,33,0.71,35,0.976,36,1.396,40,1.247,41,1.528,42,0.511,43,0.206,45,0.178,46,0.101,47,0.494,52,1.543,54,1.173,59,0.542,60,1.014,61,1.014,62,0.649,63,1.287,64,0.649,65,0.649,66,0.45,67,0.649,68,0.408,69,0.649,70,0.45,71,0.649,72,0.45,73,0.649,74,0.649,75,0.976,76,1.426,77,0.649,78,0.408,79,0.649,80,0.45,81,0.649,82,0.45,83,0.542,84,0.649,85,0.408,86,0.593,87,0.649,88,0.649,89,0.01,90,0.016,91,0.01,122,0.542,129,0.946,143,1.839,152,2.085,165,0.711,167,1.11,199,1.173,212,4.109,245,2.951,247,2.399,250,2.399,251,3.335,253,1.537,255,1.537,256,2.734,262,1.537,284,1.537,372,2.359,380,1.173,449,2.277,451,1.832,452,1.638,454,2.075,466,3.628,467,1.537,468,2.883,469,3.558,470,2.893,471,3.558,472,3.558,473,3.558,474,3.558,475,3.558,476,3.558,477,3.558,478,4.621,479,2.893,480,2.399,481,1.832,482,2.399,483,1.537,484,2.893,485,1.853,486,1.853,487,2.951,488,1.853,489,1.853,490,1.853,491,1.853,492,2.893,493,1.853,494,1.853,495,1.853,496,1.853,497,1.853,498,1.853,499,1.853,500,1.853,501,1.537,502,1.173,503,1.537,504,1.853,505,1.853,506,1.853,507,1.537,508,1.853,509,1.853,510,1.537,511,3.558,512,1.853,513,1.853,514,1.853,515,1.853,516,1.537,517,3.558,518,1.853,519,4.361,520,1.853,521,3.558,522,1.853,523,1.853,524,1.853,525,2.893,526,3.314,527,1.853,528,2.893,529,2.893,530,1.853,531,1.537,532,1.853,533,4.621,534,4.621,535,2.893,536,2.893,537,3.335,538,2.893,539,2.893,540,2.893,541,2.399,542,2.399,543,2.893,544,2.399,545,1.853,546,1.853,547,1.853]],["title/components/ReminderComponent.html",[0,0.249,78,0.674]],["body/components/ReminderComponent.html",[0,0.413,1,0.763,2,1.453,3,0.333,4,0.282,5,1.214,6,1.214,7,1.214,8,0.282,10,1.743,11,2.344,12,1.214,13,2.148,14,1.791,16,1.743,18,0.385,21,1.102,22,2.745,24,0.911,27,0.817,30,0.035,31,0.653,35,0.84,36,1.453,42,0.44,43,0.385,45,0.333,46,0.188,59,1.012,60,1.591,61,1.591,62,1.214,63,1.721,64,1.214,65,1.214,66,0.84,67,1.214,68,0.763,69,1.214,70,0.84,71,1.214,72,0.84,73,1.214,74,1.214,75,0.84,76,1.355,77,1.214,78,1.185,79,1.214,80,0.84,81,1.214,82,0.84,83,1.012,84,1.214,85,0.763,86,1.108,87,1.214,88,1.214,89,0.019,90,0.025,91,0.019,165,1.329,167,1.743,548,2.872,549,5.065,550,4.54,551,3.463,552,3.463]],["title/components/ReminderListComponent.html",[0,0.249,80,0.742]],["body/components/ReminderListComponent.html",[0,0.321,1,0.481,2,1.05,3,0.21,4,0.178,5,0.765,6,0.765,7,0.765,8,0.178,10,1.259,11,1.823,12,0.765,13,1.977,14,1.649,16,1.259,18,0.243,19,0.796,21,0.796,22,2.236,24,0.59,27,0.987,29,1.035,30,0.036,31,0.774,32,0.557,33,0.937,35,1.197,36,1.684,40,0.765,41,0.765,42,0.627,43,0.243,45,0.21,46,0.118,53,2.721,59,0.638,60,1.149,61,1.149,62,0.765,63,1.402,64,0.765,65,0.765,66,0.53,67,0.765,68,0.481,69,0.765,70,0.53,71,0.765,72,0.53,73,0.765,74,0.765,75,0.53,76,1.453,77,0.765,78,0.481,79,0.765,80,1.063,81,0.765,82,0.53,83,1.151,84,0.765,85,0.481,86,0.699,87,0.765,88,0.765,89,0.012,90,0.018,91,0.012,114,0.638,115,1.115,117,0.838,121,1.381,165,0.838,167,1.259,179,1.383,210,3.527,222,1.383,223,1.566,236,2.897,368,3.633,372,2.518,380,1.383,383,3.268,449,1.857,452,1.857,466,3.527,481,2.774,483,1.811,502,1.383,503,1.811,507,3.268,510,1.811,531,1.811,544,2.721,553,1.811,554,3.94,555,3.94,556,3.28,557,3.94,558,3.28,559,3.28,560,3.28,561,3.28,562,3.94,563,4.38,564,3.28,565,2.183,566,2.183,567,3.28,568,2.183,569,3.28,570,2.183,571,3.28,572,2.183,573,3.94,574,2.183,575,2.183,576,2.183,577,2.183,578,2.183,579,2.183,580,2.183,581,2.183,582,2.183,583,2.183,584,2.183,585,2.183,586,2.183,587,2.183,588,2.183,589,2.183,590,2.183,591,3.28,592,3.28,593,2.183,594,3.28,595,3.28]],["title/components/ReminderListItemComponent.html",[0,0.249,82,0.742]],["body/components/ReminderListItemComponent.html",[0,0.332,1,0.508,2,1.094,3,0.221,4,0.188,5,0.808,6,0.808,7,0.808,8,0.188,11,1.067,12,0.808,13,2,14,1.668,16,1.311,18,0.256,19,0.829,21,0.829,24,0.732,27,0.962,30,0.036,31,0.491,32,0.434,35,0.988,36,1.303,40,0.808,41,0.808,42,0.517,43,0.256,45,0.221,46,0.125,58,3.227,59,0.674,60,1.197,61,1.197,62,0.808,63,1.44,64,0.808,65,0.808,66,0.56,67,0.808,68,0.508,69,0.808,70,0.56,71,0.808,72,0.56,73,0.808,74,0.808,75,0.56,76,1.412,77,0.808,78,0.508,79,0.808,80,0.56,81,0.808,82,1.092,83,1.798,84,0.808,85,0.508,86,0.738,87,0.808,88,0.808,89,0.013,90,0.019,91,0.013,104,2.919,143,1.197,165,0.885,167,1.311,210,3.459,219,3.918,256,1.935,380,2.164,408,1.913,425,2.45,466,3.459,480,2.834,481,2.85,482,2.834,487,3.986,501,1.913,502,1.46,596,1.913,597,3.417,598,4.07,599,3.417,600,4.07,601,5.032,602,5.032,603,4.5,604,2.306,605,2.306,606,2.306,607,2.306,608,2.306,609,2.306,610,2.306,611,2.306,612,2.306,613,4.07,614,2.306,615,2.306,616,1.913,617,2.306,618,2.306,619,2.306,620,3.417,621,4.07,622,2.306,623,2.306,624,2.306,625,2.306,626,2.306,627,2.306,628,2.306,629,2.306,630,2.306,631,3.417,632,2.306,633,2.306,634,2.834,635,3.417,636,2.834,637,2.834,638,3.417,639,3.417,640,2.834]],["title/injectables/ReminderService.html",[112,0.893,372,1.561]],["body/injectables/ReminderService.html",[3,0.204,4,0.173,8,0.173,18,0.236,19,0.78,21,0.78,24,0.382,27,0.996,29,1.023,30,0.036,31,0.729,32,0.663,33,0.926,35,1.185,36,1.562,40,1.358,41,1.358,42,0.62,43,0.236,45,0.204,46,0.115,47,0.566,63,0.68,76,1.391,89,0.012,90,0.018,91,0.012,112,0.939,114,0.621,115,1.085,116,1.346,117,0.816,119,0.983,120,0.895,122,1.133,124,1.346,132,1.346,136,1.524,137,2.447,139,1.641,143,1.711,145,0.983,146,2.628,148,0.895,152,1.781,154,2.628,156,1.204,236,2.628,294,1.524,298,1.346,372,1.641,394,2.666,446,2.666,447,2.666,448,1.763,449,1.82,450,1.763,451,2.035,452,2.195,454,1.524,502,1.346,516,2.666,526,2.305,634,2.666,636,3.584,637,2.666,640,2.666,641,1.763,642,3.876,643,3.215,644,3.876,645,3.214,646,3.214,647,4.321,648,4.321,649,3.214,650,3.214,651,3.214,652,2.125,653,3.214,654,2.125,655,2.125,656,2.125,657,2.125,658,3.214,659,2.125,660,3.214,661,3.214,662,2.125,663,2.125,664,2.125,665,3.876,666,2.125,667,2.125,668,2.125,669,2.125,670,2.125,671,2.125,672,2.125,673,2.125,674,2.125,675,2.125,676,3.214,677,3.214,678,2.125,679,2.125,680,2.125,681,3.214,682,2.305,683,2.125,684,4.641,685,2.125,686,2.125,687,2.125,688,4.321,689,2.125,690,2.125,691,2.125,692,2.125,693,2.125,694,2.125,695,2.125,696,2.125,697,2.125,698,2.125,699,2.125,700,2.125,701,2.125,702,2.125,703,3.214,704,3.214,705,3.876,706,2.125,707,2.125,708,2.125,709,2.125]],["title/components/SettingsComponent.html",[0,0.249,85,0.674]],["body/components/SettingsComponent.html",[0,0.317,1,0.472,2,1.034,3,0.206,4,0.174,5,0.75,6,0.75,7,0.75,8,0.174,12,0.75,13,1.969,14,1.642,16,1.24,18,0.238,19,0.784,24,0.385,27,0.7,29,0.472,30,0.035,31,0.669,32,0.495,33,0.427,42,0.495,43,0.238,45,0.206,46,0.116,47,0.57,52,2.094,54,3.313,58,3.11,59,0.625,60,1.132,61,1.132,62,0.75,63,1.388,64,0.75,65,0.75,66,0.519,67,0.75,68,0.472,69,0.75,70,0.519,71,0.75,72,0.519,73,0.75,74,0.75,75,0.519,76,0.945,77,0.75,78,0.472,79,0.75,80,0.519,81,0.75,82,0.519,83,0.625,84,0.75,85,0.956,86,1.246,87,0.75,88,0.75,89,0.012,90,0.018,91,0.012,98,0.99,99,1.567,118,1.212,139,1.65,143,1.132,148,0.901,149,1.535,152,1.665,165,0.822,167,1.24,236,2.962,244,2.68,292,2.962,298,1.355,324,3.666,349,2.68,350,2.68,363,3.597,449,1.83,451,2.046,452,2.456,468,3.51,481,2.046,526,3.51,537,2.68,541,3.597,542,4.339,682,2.317,710,1.775,711,3.893,712,3.231,713,4.655,714,2.14,715,2.14,716,2.14,717,2.14,718,2.14,719,2.14,720,3.597,721,2.14,722,3.231,723,3.231,724,2.14,725,3.231,726,5.231,727,4.655,728,2.68,729,3.231,730,3.231,731,3.231,732,3.231,733,3.231,734,2.68,735,3.231,736,3.231,737,3.231,738,3.231,739,3.231,740,3.231,741,3.231,742,4.336,743,3.231,744,3.231,745,3.231,746,2.68,747,3.231,748,3.231,749,3.231,750,3.231,751,3.231,752,3.231,753,3.231,754,3.231,755,3.231,756,3.231,757,3.231,758,3.231,759,2.14,760,2.14,761,3.231,762,3.231,763,4.336,764,3.231,765,3.231,766,4.894,767,3.231,768,3.231,769,3.231,770,2.14,771,2.14,772,4.655,773,2.14,774,2.14]],["title/classes/User.html",[46,0.166,128,1.174]],["body/classes/User.html",[3,0.363,4,0.308,8,0.308,18,0.421,19,1.166,24,0.865,27,1.032,29,0.834,30,0.035,31,0.544,32,0.707,33,0.755,45,0.363,46,0.205,52,2.134,89,0.021,90,0.027,91,0.021,108,2.34,121,1.592,122,1.105,128,1.845,152,2.37,153,2.93,291,3.789,292,3.25,324,3.345,443,2.712,445,5.05,468,2.712,775,3.137,776,4.806,777,3.782,778,3.782,779,3.782,780,3.782,781,3.782,782,3.782,783,3.782,784,3.782,785,3.782,786,3.782,787,3.782]],["title/interfaces/UserResponse.html",[150,1.415,151,1.936]],["body/interfaces/UserResponse.html",[3,0.336,4,0.286,8,0.286,18,0.39,19,1.11,20,3.281,26,1.984,30,0.036,32,0.647,39,4.018,42,0.712,43,0.39,45,0.336,46,0.19,47,0.934,52,2.151,55,2.512,56,2.512,57,1.984,89,0.02,90,0.026,91,0.02,108,2.144,112,1.337,114,1.024,115,1.788,117,1.345,119,1.621,120,1.475,122,1.337,133,2.512,135,2.905,137,2.59,139,1.788,140,2.905,143,1.228,144,2.218,145,1.621,146,1.984,147,2.218,148,1.475,149,2.512,150,1.621,151,2.897,152,2.206,153,2.86,154,2.59,155,2.905,156,1.984,157,2.905,158,2.905,159,2.905,160,2.905,161,3.794,162,2.905,163,2.905,164,2.905,289,2.512]],["title/coverage.html",[788,3.465]],["body/coverage.html",[0,0.486,1,0.71,8,0.263,9,2.671,26,1.824,30,0.036,32,0.409,46,0.235,66,0.782,68,0.71,70,0.782,72,0.782,75,0.782,76,0.782,78,0.71,80,0.782,82,0.782,83,1.264,85,0.71,89,0.018,90,0.024,91,0.018,92,2.74,93,2.039,95,2.671,96,3.103,99,1.031,112,1.428,128,1.236,133,3.103,143,1.129,148,1.821,150,2.002,151,2.039,166,2.671,188,1.824,210,2.74,212,2.31,219,2.31,232,2.039,241,2.671,259,1.824,290,3.103,329,3.103,330,2.671,332,2.671,362,2.671,372,1.644,395,2.671,396,2.671,425,4.529,444,2.671,466,3.094,467,2.671,548,2.671,553,2.671,596,2.671,641,2.671,710,2.671,775,2.671,788,2.671,789,3.22,790,3.22,791,3.22,792,5.45,793,4.886,794,4.327,795,3.22,796,4.327,797,3.22,798,3.22,799,3.22,800,4.327,801,3.22,802,5.45,803,2.671,804,5.224,805,2.671,806,3.589,807,2.671,808,2.671,809,3.22,810,3.22]],["title/dependencies.html",[177,2.329,811,2.551]],["body/dependencies.html",[30,0.036,43,0.474,89,0.024,90,0.029,91,0.024,113,1.793,114,1.245,177,2.697,179,3.277,195,4.292,196,3.711,199,2.697,222,2.697,223,3.055,616,3.533,812,5.153,813,4.259,814,4.259,815,4.259,816,4.259,817,4.259,818,4.259,819,4.259,820,4.259,821,4.259,822,4.259,823,4.259,824,4.259,825,4.259]],["title/index.html",[18,0.284,826,2.551,827,2.551]],["body/index.html",[0,0.429,4,0.306,14,1.097,30,0.027,31,0.54,89,0.021,90,0.027,91,0.021,143,1.316,191,2.692,222,3.767,720,3.968,746,3.114,812,3.114,828,3.754,829,3.754,830,3.754,831,3.754,832,3.754,833,4.783,834,3.754,835,5.265,836,5.265,837,3.754,838,3.754,839,4.783,840,5.725,841,3.754,842,3.754,843,3.754,844,3.754,845,3.754,846,3.754,847,3.754,848,3.754,849,3.754,850,3.754,851,5.265,852,5.265,853,3.754,854,5.725,855,3.754,856,3.754,857,3.754,858,3.754,859,3.754,860,3.754,861,3.114,862,4.783,863,4.783,864,5.543,865,3.754,866,4.783,867,3.754,868,5.543,869,3.754,870,3.754,871,3.754,872,5.265,873,3.754,874,3.754,875,3.754,876,2.692,877,3.754,878,3.754]],["title/modules.html",[176,2.365]],["body/modules.html",[30,0.031,89,0.027,90,0.031,91,0.027,175,3.048,176,2.725,187,2.725,196,3.451,879,4.813,880,4.813,881,5.563,882,4.813,883,4.813]],["title/overview.html",[876,2.996]],["body/overview.html",[1,1.145,2,1.167,30,0.035,59,1.065,66,1.434,68,1.145,70,1.26,72,1.26,75,1.26,78,1.145,80,1.26,82,1.26,85,1.145,89,0.02,90,0.026,91,0.02,94,2.615,132,2.309,174,2.309,175,4.052,176,2.065,177,2.309,178,3.024,179,2.309,180,3.024,181,2.615,182,3.024,183,3.024,184,3.024,185,3.024,186,3.024,187,2.94,188,2.94,189,3.894,190,3.024,191,2.615,230,2.309,289,2.615,443,2.615,682,2.615,728,4.548,734,3.024,876,2.615,884,3.646]],["title/routes.html",[230,2.645]],["body/routes.html",[30,0.032,89,0.028,90,0.032,91,0.028,230,3.137]],["title/miscellaneous/variables.html",[885,2.116,886,3.051]],["body/miscellaneous/variables.html",[18,0.47,30,0.035,32,0.735,40,1.946,41,1.946,89,0.024,90,0.029,91,0.024,129,2.628,148,2.434,256,2.392,643,4.27,803,3.503,805,3.503,806,3.503,807,4.27,808,4.27,861,4.27,885,3.503,886,3.503,887,5.148,888,4.224,889,4.224,890,4.224,891,4.224,892,4.224,893,5.148,894,4.224,895,4.224,896,4.224,897,4.224]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":437,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.3s",{"_index":435,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.45s",{"_index":433,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.5",{"_index":426,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0/1",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{}}}],["1.2s",{"_index":422,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["10",{"_index":884,"title":{},"body":{"overview.html":{}}}],["10.2.0",{"_index":812,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["100",{"_index":441,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["2",{"_index":728,"title":{},"body":{"components/SettingsComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["212529",{"_index":418,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["3",{"_index":682,"title":{},"body":{"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["3.5.1",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":732,"title":{},"body":{"components/SettingsComponent.html":{}}}],["4.5.3",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{}}}],["5",{"_index":734,"title":{},"body":{"components/SettingsComponent.html":{},"overview.html":{}}}],["50",{"_index":420,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["6.6.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":414,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["8.0.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["80px",{"_index":407,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["8px",{"_index":416,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["_token",{"_index":291,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["absolute",{"_index":413,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["accessors",{"_index":776,"title":{},"body":{"classes/User.html":{}}}],["action",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/ReminderListComponent.html":{}}}],["activatedroutesnapshot",{"_index":103,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":468,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["add'},{'name",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["add.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.css",{"_index":469,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.html",{"_index":470,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts",{"_index":467,"title":{},"body":{"components/ReminderAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:13",{"_index":485,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:15",{"_index":486,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:17",{"_index":488,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:19",{"_index":497,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:20",{"_index":495,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:21",{"_index":496,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:22",{"_index":498,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:23",{"_index":494,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:25",{"_index":500,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:26",{"_index":499,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:27",{"_index":484,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:30",{"_index":489,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:42",{"_index":491,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:55",{"_index":493,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add.component.ts:59",{"_index":490,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["add/reminder",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderAddComponent.html":{},"coverage.html":{}}}],["adding",{"_index":742,"title":{},"body":{"components/SettingsComponent.html":{}}}],["address",{"_index":722,"title":{},"body":{"components/SettingsComponent.html":{}}}],["admin",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["admin'},{'name",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["admin.component.html",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.service",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["admin/admin.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":93,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminservice",{"_index":26,"title":{"injectables/AdminService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["allreminders",{"_index":642,"title":{},"body":{"injectables/ReminderService.html":{}}}],["angular",{"_index":835,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":616,"title":{},"body":{"components/ReminderListItemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":145,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"interfaces/AuthDataResponse.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["angular/compiler",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":113,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":612,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["animate('250ms",{"_index":626,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["animation",{"_index":421,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["animations",{"_index":617,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["answer",{"_index":738,"title":{},"body":{"components/SettingsComponent.html":{}}}],["anyone",{"_index":751,"title":{},"body":{"components/SettingsComponent.html":{}}}],["api",{"_index":526,"title":{},"body":{"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":66,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":175,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":187,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arialabelledby",{"_index":580,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["artifacts",{"_index":855,"title":{},"body":{"index.html":{}}}],["auth",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["auth'},{'name",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["auth.component.css",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":260,"title":{},"body":{"components/AuthComponent.html":{},"interceptors/AuthInterceptorService.html":{}}}],["auth/auth",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":118,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/SettingsComponent.html":{}}}],["authcomponent",{"_index":68,"title":{"components/AuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authdataresponse",{"_index":259,"title":{"interfaces/AuthDataResponse.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":232,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptorservice",{"_index":188,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["authobserver",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{}}}],["authobserver.subscribe",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{}}}],["authorization",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/SettingsComponent.html":{}}}],["authorize",{"_index":757,"title":{},"body":{"components/SettingsComponent.html":{}}}],["authorized",{"_index":754,"title":{},"body":{"components/SettingsComponent.html":{}}}],["authservice",{"_index":99,"title":{"injectables/AuthService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["autologin",{"_index":309,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["automatically",{"_index":845,"title":{},"body":{"index.html":{}}}],["available",{"_index":883,"title":{},"body":{"modules.html":{}}}],["backend.herokuapp.com",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backendurl",{"_index":713,"title":{},"body":{"components/SettingsComponent.html":{}}}],["base",{"_index":761,"title":{},"body":{"components/SettingsComponent.html":{}}}],["baseurl",{"_index":643,"title":{},"body":{"injectables/ReminderService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":582,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["bearer",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/SettingsComponent.html":{}}}],["before",{"_index":755,"title":{},"body":{"components/SettingsComponent.html":{}}}],["behaviorsubject",{"_index":146,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["behaviorsubject(null",{"_index":144,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"interfaces/UserResponse.html":{}}}],["bezier(0.5",{"_index":424,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["block",{"_index":403,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["body",{"_index":694,"title":{},"body":{"injectables/ReminderService.html":{}}}],["boolean",{"_index":108,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["bootstrap",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{}}}],["border",{"_index":412,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["box",{"_index":410,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["browse",{"_index":881,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":854,"title":{},"body":{"index.html":{}}}],["call",{"_index":756,"title":{},"body":{"components/SettingsComponent.html":{}}}],["callback",{"_index":541,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{}}}],["callbackurl",{"_index":446,"title":{},"body":{"classes/Reminder.html":{},"injectables/ReminderService.html":{}}}],["canactivate",{"_index":97,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":102,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["change",{"_index":847,"title":{},"body":{"index.html":{}}}],["changes",{"_index":595,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["check",{"_index":875,"title":{},"body":{"index.html":{}}}],["child(1",{"_index":431,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(2",{"_index":434,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(3",{"_index":436,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["choose",{"_index":534,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["choosed",{"_index":733,"title":{},"body":{"components/SettingsComponent.html":{}}}],["class",{"_index":46,"title":{"classes/Reminder.html":{},"classes/User.html":{}},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["classes",{"_index":443,"title":{},"body":{"classes/Reminder.html":{},"classes/User.html":{},"overview.html":{}}}],["cleartimeout(n",{"_index":691,"title":{},"body":{"injectables/ReminderService.html":{}}}],["cli",{"_index":836,"title":{},"body":{"index.html":{}}}],["close",{"_index":594,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["cluster_appmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":849,"title":{},"body":{"index.html":{}}}],["color",{"_index":428,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["command",{"_index":877,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["console.log(errormessage",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["constructor(adminservice",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{}}}],["constructor(authservice",{"_index":98,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(email",{"_index":777,"title":{},"body":{"classes/User.html":{}}}],["constructor(http",{"_index":136,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["constructor(id",{"_index":453,"title":{},"body":{"classes/Reminder.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{}}}],["constructor(reminderservice",{"_index":483,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["content",{"_index":575,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["context",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":788,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":638,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["createreminder",{"_index":645,"title":{},"body":{"injectables/ReminderService.html":{}}}],["createreminder(reminder",{"_index":651,"title":{},"body":{"injectables/ReminderService.html":{}}}],["creates",{"_index":765,"title":{},"body":{"components/SettingsComponent.html":{}}}],["creation",{"_index":447,"title":{},"body":{"classes/Reminder.html":{},"injectables/ReminderService.html":{}}}],["creationstring",{"_index":448,"title":{},"body":{"classes/Reminder.html":{},"injectables/ReminderService.html":{}}}],["credentatials",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{}}}],["cubic",{"_index":423,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["current",{"_index":591,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["date",{"_index":454,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{}}}],["date(reminder.creation",{"_index":683,"title":{},"body":{"injectables/ReminderService.html":{}}}],["date(reminder.deadline",{"_index":680,"title":{},"body":{"injectables/ReminderService.html":{}}}],["date(this.formdeadline",{"_index":525,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["date(this.remindertomodify.deadline",{"_index":514,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["deadline",{"_index":449,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["deadlinestring",{"_index":450,"title":{},"body":{"classes/Reminder.html":{},"injectables/ReminderService.html":{}}}],["declarations",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":432,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["delete",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["delete(environment.baseurl",{"_index":162,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["delete(this.baseurl",{"_index":708,"title":{},"body":{"injectables/ReminderService.html":{}}}],["deleteevent",{"_index":628,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["deletereminder",{"_index":646,"title":{},"body":{"injectables/ReminderService.html":{}}}],["deletereminder(reminderid",{"_index":653,"title":{},"body":{"injectables/ReminderService.html":{}}}],["deletes",{"_index":769,"title":{},"body":{"components/SettingsComponent.html":{}}}],["deleteuser",{"_index":134,"title":{},"body":{"injectables/AdminService.html":{}}}],["deleteuser(userid",{"_index":140,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["dependencies",{"_index":177,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":451,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["descriptive",{"_index":739,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dev",{"_index":842,"title":{},"body":{"index.html":{}}}],["development",{"_index":838,"title":{},"body":{"index.html":{}}}],["directive",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":853,"title":{},"body":{"index.html":{}}}],["directory",{"_index":858,"title":{},"body":{"index.html":{}}}],["display",{"_index":401,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["dist",{"_index":857,"title":{},"body":{"index.html":{}}}],["div",{"_index":409,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["div:nth",{"_index":430,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["documentation",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["due",{"_index":696,"title":{},"body":{"injectables/ReminderService.html":{}}}],["dynamic",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":869,"title":{},"body":{"index.html":{}}}],["easily",{"_index":747,"title":{},"body":{"components/SettingsComponent.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["email's",{"_index":724,"title":{},"body":{"components/SettingsComponent.html":{}}}],["email\\'s",{"_index":771,"title":{},"body":{"components/SettingsComponent.html":{}}}],["end",{"_index":868,"title":{},"body":{"index.html":{}}}],["environment",{"_index":148,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":298,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["environments/environment",{"_index":149,"title":{},"body":{"injectables/AdminService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{}}}],["error",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{},"components/SettingsComponent.html":{}}}],["errormessage",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["errormessage.error.message",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.error.status",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.message",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.name",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{}}}],["errormessage.status",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{}}}],["eventemitter",{"_index":487,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["execute",{"_index":866,"title":{},"body":{"index.html":{}}}],["exhaustmap",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["exhaustmap((user",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["exports",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":256,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["fetchusers",{"_index":135,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["files",{"_index":848,"title":{},"body":{"index.html":{}}}],["final",{"_index":624,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["flag",{"_index":860,"title":{},"body":{"index.html":{}}}],["form",{"_index":253,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.reset",{"_index":284,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.valid",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["form.value",{"_index":530,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["form.value.email",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{}}}],["form.value.password",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["formcallbackurl",{"_index":471,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formdeadline",{"_index":472,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formdescription",{"_index":473,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formname",{"_index":474,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formnotification",{"_index":475,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["formsmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":832,"title":{},"body":{"index.html":{}}}],["full",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":871,"title":{},"body":{"index.html":{}}}],["generate",{"_index":851,"title":{},"body":{"index.html":{}}}],["generated",{"_index":834,"title":{},"body":{"index.html":{}}}],["get(environment.baseurl",{"_index":155,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["get(this.baseurl",{"_index":677,"title":{},"body":{"injectables/ReminderService.html":{}}}],["getnotifications",{"_index":647,"title":{},"body":{"injectables/ReminderService.html":{}}}],["getreminders",{"_index":648,"title":{},"body":{"injectables/ReminderService.html":{}}}],["gets",{"_index":763,"title":{},"body":{"components/SettingsComponent.html":{}}}],["getting",{"_index":826,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":782,"title":{},"body":{"classes/User.html":{}}}],["go",{"_index":874,"title":{},"body":{"index.html":{}}}],["graph",{"_index":882,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":92,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["guard.ts",{"_index":96,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.ts:14",{"_index":101,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["guard.ts:17",{"_index":106,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["guards",{"_index":94,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["handleauthentication",{"_index":323,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["handleauthentication(email",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":363,"title":{},"body":{"components/HeaderComponent.html":{},"components/SettingsComponent.html":{}}}],["header'},{'name",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["header.component.css",{"_index":364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":365,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":70,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":408,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["help",{"_index":872,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":730,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hidden",{"_index":621,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["home",{"_index":393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":139,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{}}}],["http://localhost:4200",{"_index":844,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":137,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["httpclientmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpinterceptor",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["https://reminders",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.figma.com/file/hgzozrxdfcgk5hvkf8ckra/reminders",{"_index":829,"title":{},"body":{"index.html":{}}}],["id",{"_index":292,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/Reminder.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["id=0%3a1",{"_index":831,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{}}}],["imports",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":427,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["initial",{"_index":619,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["injectable",{"_index":112,"title":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"overview.html":{}}}],["inline",{"_index":402,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["input",{"_index":380,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["input('modify",{"_index":504,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["input('reminder",{"_index":506,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["inputs",{"_index":480,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["intercept",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":330,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:14",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:17",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interface",{"_index":150,"title":{"interfaces/AuthDataResponse.html":{},"interfaces/UserResponse.html":{}},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":289,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"interfaces/UserResponse.html":{},"overview.html":{}}}],["invalidform",{"_index":476,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["isadmin",{"_index":153,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["isauth",{"_index":127,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["isauthenticated",{"_index":366,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isloading",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["isloginmode",{"_index":246,"title":{},"body":{"components/AuthComponent.html":{}}}],["ismodify",{"_index":505,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["item",{"_index":597,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item'},{'name",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["item.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":598,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.html",{"_index":599,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts",{"_index":596,"title":{},"body":{"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:37",{"_index":605,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:38",{"_index":606,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:39",{"_index":607,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:41",{"_index":611,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:43",{"_index":610,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:47",{"_index":608,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:51",{"_index":609,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item.component.ts:53",{"_index":604,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["item/reminder",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["jquery",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('userdata",{"_index":311,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["json.stringify(user",{"_index":328,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["karma",{"_index":867,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":438,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["last",{"_index":762,"title":{},"body":{"components/SettingsComponent.html":{}}}],["later",{"_index":786,"title":{},"body":{"classes/User.html":{}}}],["lds",{"_index":399,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["line",{"_index":726,"title":{},"body":{"components/SettingsComponent.html":{}}}],["lines",{"_index":735,"title":{},"body":{"components/SettingsComponent.html":{}}}],["list",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["list.component",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":555,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.html",{"_index":556,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts",{"_index":553,"title":{},"body":{"components/ReminderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":576,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:16",{"_index":577,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:18",{"_index":564,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:25",{"_index":565,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:29",{"_index":574,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:38",{"_index":566,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:48",{"_index":568,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:52",{"_index":572,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list.component.ts:56",{"_index":570,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["list/reminder",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["literal",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadeduser",{"_index":312,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["loading",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["loadingspinnercomponent",{"_index":72,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["localstorage.removeitem('userdata",{"_index":321,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('userdata",{"_index":327,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["login",{"_index":285,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["login(email",{"_index":318,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":319,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["mail",{"_index":741,"title":{},"body":{"components/SettingsComponent.html":{}}}],["main",{"_index":745,"title":{},"body":{"components/SettingsComponent.html":{}}}],["map",{"_index":115,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["map((reminders",{"_index":678,"title":{},"body":{"injectables/ReminderService.html":{}}}],["map((user",{"_index":125,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["map((users",{"_index":157,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["margin",{"_index":415,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["matching",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["milis",{"_index":700,"title":{},"body":{"injectables/ReminderService.html":{}}}],["miscellaneous",{"_index":885,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":581,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["modalservice",{"_index":562,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["mode",{"_index":537,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{}}}],["modified",{"_index":523,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["modifiedreq",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["modify",{"_index":481,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["modifyevent",{"_index":630,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["module",{"_index":174,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":176,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":873,"title":{},"body":{"index.html":{}}}],["multi",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["navigate",{"_index":843,"title":{},"body":{"index.html":{}}}],["need",{"_index":753,"title":{},"body":{"components/SettingsComponent.html":{}}}],["new",{"_index":143,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"index.html":{}}}],["newreminder",{"_index":531,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["newreminders",{"_index":670,"title":{},"body":{"injectables/ReminderService.html":{}}}],["next",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(modifiedreq",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(req",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/ReminderListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":563,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["ngbmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":251,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["ngmodule",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":368,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{}}}],["none",{"_index":547,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notifcation",{"_index":536,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notifed",{"_index":539,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["notification",{"_index":452,"title":{},"body":{"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["notification('reminders",{"_index":693,"title":{},"body":{"injectables/ReminderService.html":{}}}],["notification.close",{"_index":699,"title":{},"body":{"injectables/ReminderService.html":{}}}],["notification.onclick",{"_index":698,"title":{},"body":{"injectables/ReminderService.html":{}}}],["notification.requestpermission",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["notifications",{"_index":644,"title":{},"body":{"injectables/ReminderService.html":{}}}],["now",{"_index":697,"title":{},"body":{"injectables/ReminderService.html":{}}}],["null",{"_index":255,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["object",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":110,"title":{},"body":{"guards/AdminGuard.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["ondelete",{"_index":601,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["ondeleteitem",{"_index":558,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["ondeleteitem(reminder",{"_index":567,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["ondeleteuser",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{}}}],["ondeleteuser(userid",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{}}}],["ondestroy",{"_index":554,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["onlogout",{"_index":369,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onmodify",{"_index":602,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["onmodifyitem",{"_index":559,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifyitem(reminder",{"_index":569,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifysaved",{"_index":560,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onmodifysaved(newreminder",{"_index":571,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["onreminderclicked",{"_index":603,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["onreminderpage",{"_index":370,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsubmit",{"_index":247,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["onsubmit(form",{"_index":250,"title":{},"body":{"components/AuthComponent.html":{},"components/ReminderAddComponent.html":{}}}],["onswitchmode",{"_index":248,"title":{},"body":{"components/AuthComponent.html":{}}}],["opacity",{"_index":622,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["open",{"_index":561,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["open(content",{"_index":573,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":501,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["output('ondelete",{"_index":627,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["output('onmodify",{"_index":629,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["output('savedmodify",{"_index":508,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["outputs",{"_index":482,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListItemComponent.html":{}}}],["overflow",{"_index":620,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["overview",{"_index":876,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":811,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":746,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["password",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["path",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":156,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["pipe(take(1",{"_index":688,"title":{},"body":{"injectables/ReminderService.html":{}}}],["please",{"_index":533,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["position",{"_index":404,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["post",{"_index":764,"title":{},"body":{"components/SettingsComponent.html":{}}}],["post(this.baseurl",{"_index":702,"title":{},"body":{"injectables/ReminderService.html":{}}}],["post(this.urlstr",{"_index":300,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":121,"title":{},"body":{"guards/AdminGuard.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"classes/User.html":{}}}],["prod",{"_index":859,"title":{},"body":{"index.html":{}}}],["production",{"_index":861,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":833,"title":{},"body":{"index.html":{}}}],["promise",{"_index":111,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["properties",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["protractor",{"_index":870,"title":{},"body":{"index.html":{}}}],["provide",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":119,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["providers",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":445,"title":{},"body":{"classes/Reminder.html":{},"classes/User.html":{}}}],["put",{"_index":767,"title":{},"body":{"components/SettingsComponent.html":{}}}],["put(this.baseurl",{"_index":706,"title":{},"body":{"injectables/ReminderService.html":{}}}],["r.name",{"_index":695,"title":{},"body":{"injectables/ReminderService.html":{}}}],["radius",{"_index":419,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["redirectto",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":878,"title":{},"body":{"index.html":{}}}],["register",{"_index":301,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["registered",{"_index":540,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["relative",{"_index":405,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["reload",{"_index":846,"title":{},"body":{"index.html":{}}}],["remidner",{"_index":592,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["reminder",{"_index":76,"title":{"classes/Reminder.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["reminder's",{"_index":727,"title":{},"body":{"components/SettingsComponent.html":{}}}],["reminder'},{'name",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["reminder.callbackurl",{"_index":640,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.component.css",{"_index":549,"title":{},"body":{"components/ReminderComponent.html":{}}}],["reminder.component.html",{"_index":550,"title":{},"body":{"components/ReminderComponent.html":{}}}],["reminder.creation",{"_index":704,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.creationstring",{"_index":639,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["reminder.deadline",{"_index":703,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.deadlinestring",{"_index":635,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["reminder.deadlinestring.touppercase().includes(text.touppercase",{"_index":674,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.description",{"_index":637,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.model",{"_index":502,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.name",{"_index":634,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.name.touppercase().includes(text.touppercase",{"_index":672,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.notification",{"_index":636,"title":{},"body":{"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["reminder.notification.touppercase().includes(text.touppercase",{"_index":673,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminder.service",{"_index":503,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["reminder/reminder",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["reminder/reminder.component",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["reminder/reminder.service",{"_index":384,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reminder\\'s",{"_index":772,"title":{},"body":{"components/SettingsComponent.html":{}}}],["reminderaddcomponent",{"_index":75,"title":{"components/ReminderAddComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["remindercomponent",{"_index":78,"title":{"components/ReminderComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminderid",{"_index":655,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminderlistcomponent",{"_index":80,"title":{"components/ReminderListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminderlistitemcomponent",{"_index":82,"title":{"components/ReminderListItemComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reminders",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["reminders.api2020@gmail.com",{"_index":723,"title":{},"body":{"components/SettingsComponent.html":{}}}],["reminders.map((reminder",{"_index":679,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminders/${reminder.id",{"_index":707,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminders/${reminderid",{"_index":709,"title":{},"body":{"injectables/ReminderService.html":{}}}],["reminders/1",{"_index":766,"title":{},"body":{"components/SettingsComponent.html":{}}}],["reminders/web",{"_index":687,"title":{},"body":{"injectables/ReminderService.html":{}}}],["remindersearch",{"_index":371,"title":{},"body":{"components/HeaderComponent.html":{}}}],["remindersearch(input",{"_index":378,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reminderservice",{"_index":372,"title":{"injectables/ReminderService.html":{}},"body":{"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"coverage.html":{}}}],["remindersubscrtiption",{"_index":557,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["remindertomodify",{"_index":507,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["req",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clone",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["request's",{"_index":759,"title":{},"body":{"components/SettingsComponent.html":{}}}],["request\\'s",{"_index":773,"title":{},"body":{"components/SettingsComponent.html":{}}}],["require",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resdata._token",{"_index":307,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["resdata.email",{"_index":305,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["resdata.id",{"_index":306,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["resdata.isadmin",{"_index":308,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":546,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["response",{"_index":685,"title":{},"body":{"injectables/ReminderService.html":{}}}],["response.foreach((r",{"_index":692,"title":{},"body":{"injectables/ReminderService.html":{}}}],["result",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.then",{"_index":584,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["results",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":122,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["ring",{"_index":400,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["root",{"_index":120,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["rotate(0deg",{"_index":440,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":442,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["route",{"_index":107,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["router",{"_index":100,"title":{},"body":{"guards/AdminGuard.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["routermodule",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":105,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":230,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":840,"title":{},"body":{"index.html":{}}}],["running",{"_index":862,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":114,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":117,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/ReminderListComponent.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["save",{"_index":544,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["savedmodify",{"_index":478,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["savedreminder",{"_index":509,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["scaffolding",{"_index":850,"title":{},"body":{"index.html":{}}}],["search",{"_index":394,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ReminderService.html":{}}}],["search(text",{"_index":658,"title":{},"body":{"injectables/ReminderService.html":{}}}],["searching",{"_index":667,"title":{},"body":{"injectables/ReminderService.html":{}}}],["see",{"_index":744,"title":{},"body":{"components/SettingsComponent.html":{}}}],["select",{"_index":535,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectednotification",{"_index":477,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectoption",{"_index":479,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selectoption(value",{"_index":492,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["sender",{"_index":740,"title":{},"body":{"components/SettingsComponent.html":{}}}],["sent",{"_index":736,"title":{},"body":{"components/SettingsComponent.html":{}}}],["serve",{"_index":841,"title":{},"body":{"index.html":{}}}],["server",{"_index":839,"title":{},"body":{"index.html":{}}}],["server's",{"_index":760,"title":{},"body":{"components/SettingsComponent.html":{}}}],["server\\'s",{"_index":774,"title":{},"body":{"components/SettingsComponent.html":{}}}],["service",{"_index":737,"title":{},"body":{"components/SettingsComponent.html":{}}}],["service's",{"_index":721,"title":{},"body":{"components/SettingsComponent.html":{}}}],["service\\'s",{"_index":770,"title":{},"body":{"components/SettingsComponent.html":{}}}],["setheaders",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["settings",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.css",{"_index":711,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":712,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":85,"title":{"components/SettingsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["share",{"_index":750,"title":{},"body":{"components/SettingsComponent.html":{}}}],["shared/loading",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":752,"title":{},"body":{"components/SettingsComponent.html":{}}}],["showing",{"_index":668,"title":{},"body":{"injectables/ReminderService.html":{}}}],["showingdescription",{"_index":600,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["sign",{"_index":286,"title":{},"body":{"components/AuthComponent.html":{}}}],["signup",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(email",{"_index":299,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["sizing",{"_index":411,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["slice(0",{"_index":516,"title":{},"body":{"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{}}}],["solid",{"_index":417,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"index.html":{}}}],["spec\\.ts",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":397,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["spinner.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["spinner.component.css",{"_index":398,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":396,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/.../environment.prod.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin",{"_index":95,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts:13",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:18",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:9",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.service.ts",{"_index":133,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["src/app/admin/admin.service.ts:15",{"_index":138,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/admin.service.ts:19",{"_index":142,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/admin.service.ts:39",{"_index":141,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/app",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:14",{"_index":258,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:15",{"_index":257,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:16",{"_index":249,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:20",{"_index":254,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":252,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":290,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:26",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:45",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:66",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:85",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:91",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/user.model.ts",{"_index":775,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/auth/user.model.ts:1",{"_index":778,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:10",{"_index":783,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:4",{"_index":779,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:5",{"_index":780,"title":{},"body":{"classes/User.html":{}}}],["src/app/auth/user.model.ts:7",{"_index":781,"title":{},"body":{"classes/User.html":{}}}],["src/app/header/header.component.ts",{"_index":362,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":382,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":381,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:16",{"_index":373,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:24",{"_index":375,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:34",{"_index":374,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:38",{"_index":377,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:42",{"_index":379,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:46",{"_index":376,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/reminder/reminder",{"_index":466,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.component.ts",{"_index":548,"title":{},"body":{"components/ReminderComponent.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.component.ts:11",{"_index":552,"title":{},"body":{"components/ReminderComponent.html":{}}}],["src/app/reminder/reminder.component.ts:8",{"_index":551,"title":{},"body":{"components/ReminderComponent.html":{}}}],["src/app/reminder/reminder.model.ts",{"_index":444,"title":{},"body":{"classes/Reminder.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.model.ts:1",{"_index":455,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:10",{"_index":461,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:11",{"_index":459,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:3",{"_index":463,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:4",{"_index":464,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:5",{"_index":460,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:6",{"_index":458,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:7",{"_index":462,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:8",{"_index":465,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.model.ts:9",{"_index":457,"title":{},"body":{"classes/Reminder.html":{}}}],["src/app/reminder/reminder.service.ts",{"_index":641,"title":{},"body":{"injectables/ReminderService.html":{},"coverage.html":{}}}],["src/app/reminder/reminder.service.ts:112",{"_index":662,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:12",{"_index":663,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:129",{"_index":654,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:14",{"_index":666,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:18",{"_index":650,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:24",{"_index":659,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:39",{"_index":657,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:65",{"_index":664,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:66",{"_index":656,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/reminder/reminder.service.ts:95",{"_index":652,"title":{},"body":{"injectables/ReminderService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":710,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:10",{"_index":714,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:16",{"_index":715,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:17",{"_index":716,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/shared/loading",{"_index":395,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":294,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{}}}],["src/environments/environment.prod.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":827,"title":{"index.html":{}},"body":{}}],["state",{"_index":104,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ReminderListItemComponent.html":{}}}],["statements",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":856,"title":{},"body":{"index.html":{}}}],["string",{"_index":152,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{}}}],["style",{"_index":613,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["styles",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["submit",{"_index":543,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["subscribe",{"_index":161,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["subscribe((response",{"_index":684,"title":{},"body":{"injectables/ReminderService.html":{}}}],["subscription",{"_index":383,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReminderListComponent.html":{}}}],["successfull",{"_index":743,"title":{},"body":{"components/SettingsComponent.html":{}}}],["support",{"_index":879,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":880,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":288,"title":{},"body":{"components/AuthComponent.html":{}}}],["syntax",{"_index":725,"title":{},"body":{"components/SettingsComponent.html":{}}}],["sza",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sza?node",{"_index":830,"title":{},"body":{"index.html":{}}}],["table",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":116,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/ReminderService.html":{}}}],["take(1",{"_index":124,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/ReminderService.html":{}}}],["tap",{"_index":147,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"interfaces/UserResponse.html":{}}}],["tap((resdata",{"_index":303,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["tap((users",{"_index":159,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":865,"title":{},"body":{"index.html":{}}}],["tests",{"_index":864,"title":{},"body":{"index.html":{}}}],["text",{"_index":660,"title":{},"body":{"injectables/ReminderService.html":{}}}],["textarea",{"_index":545,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this._token",{"_index":787,"title":{},"body":{"classes/User.html":{}}}],["this.adminservice.deleteuser(userid",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminservice.fetchusers",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminservice.users.subscribe((users",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.allreminders",{"_index":665,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.allreminders.filter",{"_index":671,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.authservice.autologin",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(email",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.signup(email",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.user.pipe",{"_index":123,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.user.subscribe((user",{"_index":386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.user.value.token",{"_index":719,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.backendurl",{"_index":717,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.baseurl",{"_index":669,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.deleteevent.emit(this.reminder",{"_index":632,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.error",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.fetchusers",{"_index":164,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["this.formcallbackurl",{"_index":521,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formdeadline",{"_index":513,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formdescription",{"_index":517,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formname",{"_index":511,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.formnotification",{"_index":519,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.getnotifications",{"_index":686,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.getreminders",{"_index":705,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.handleauthentication",{"_index":304,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.http",{"_index":154,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"injectables/ReminderService.html":{},"interfaces/UserResponse.html":{}}}],["this.invalidform",{"_index":529,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.isadmin",{"_index":388,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isauthenticated",{"_index":387,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isloading",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.isloginmode",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.modalservice",{"_index":579,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.modifyevent.emit(this.reminder",{"_index":633,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.notifications.foreach((n",{"_index":690,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.notifications.length",{"_index":689,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.notifications.push(notificationtimeout",{"_index":701,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.reminders",{"_index":587,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminders.next(newreminders",{"_index":675,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.reminders.next(this.allreminders",{"_index":676,"title":{},"body":{"injectables/ReminderService.html":{}}}],["this.reminderservice.createreminder(newreminder",{"_index":532,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.reminderservice.deletereminder(reminder.id",{"_index":589,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.getreminders",{"_index":588,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.reminders.subscribe",{"_index":586,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.reminderservice.search(input",{"_index":391,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.reminderservice.updatereminder(newreminder",{"_index":590,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindersubscrtiption",{"_index":585,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindersubscrtiption.unsubscribe",{"_index":578,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["this.remindertomodify",{"_index":510,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{}}}],["this.remindertomodify.callbackurl",{"_index":522,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.description",{"_index":518,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.id",{"_index":524,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.name",{"_index":512,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.remindertomodify.notification",{"_index":520,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.router.createurltree(['/auth",{"_index":131,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["this.router.createurltree(['/reminders",{"_index":130,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate(['/auth",{"_index":322,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/reminders",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.url",{"_index":390,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.savedreminder.emit(modified",{"_index":527,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.selectednotification",{"_index":528,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["this.showingdescription",{"_index":631,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["this.token",{"_index":718,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.urlstr",{"_index":297,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.user.next(loadeduser",{"_index":317,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.user.next(null",{"_index":320,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.user.next(user",{"_index":326,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["this.users",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.users.next(users",{"_index":160,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["this.usersub",{"_index":385,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.usersub.unsubscribe",{"_index":389,"title":{},"body":{"components/HeaderComponent.html":{}}}],["timeout",{"_index":293,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["timeout(10000",{"_index":302,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["timeouterror",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{}}}],["times",{"_index":593,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["title",{"_index":583,"title":{},"body":{"components/ReminderListComponent.html":{}}}],["toisostring",{"_index":515,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["token",{"_index":324,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["tokenexpiration",{"_index":785,"title":{},"body":{"classes/User.html":{}}}],["tolocalestring",{"_index":681,"title":{},"body":{"injectables/ReminderService.html":{}}}],["transform",{"_index":439,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["transition",{"_index":614,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["transition('initialfinal",{"_index":625,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["transparent",{"_index":429,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"components/SettingsComponent.html":{}}}],["trigger",{"_index":615,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["trigger('smoothcollapse",{"_index":618,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["true",{"_index":129,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/ReminderAddComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/Reminder.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":863,"title":{},"body":{"index.html":{}}}],["up",{"_index":287,"title":{},"body":{"components/AuthComponent.html":{}}}],["updatereminder",{"_index":649,"title":{},"body":{"injectables/ReminderService.html":{}}}],["updatereminder(reminder",{"_index":661,"title":{},"body":{"injectables/ReminderService.html":{}}}],["updates",{"_index":768,"title":{},"body":{"components/SettingsComponent.html":{}}}],["url",{"_index":542,"title":{},"body":{"components/ReminderAddComponent.html":{},"components/SettingsComponent.html":{}}}],["urlstr",{"_index":296,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["urltree",{"_index":109,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":852,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":128,"title":{"classes/User.html":{}},"body":{"guards/AdminGuard.html":{},"interfaces/AuthDataResponse.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(email",{"_index":325,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["user.email",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["user.isadmin",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"components/HeaderComponent.html":{},"interfaces/UserResponse.html":{}}}],["user.model",{"_index":295,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["user.token",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["user.userid",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["userdata",{"_index":310,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata._token",{"_index":315,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata.email",{"_index":313,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata.id",{"_index":314,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userdata.isadmin",{"_index":316,"title":{},"body":{"interfaces/AuthDataResponse.html":{},"injectables/AuthService.html":{}}}],["userid",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["userresponse",{"_index":151,"title":{"interfaces/UserResponse.html":{}},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["users",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["users.map((user",{"_index":158,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["users/${userid",{"_index":163,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/UserResponse.html":{}}}],["usersub",{"_index":367,"title":{},"body":{"components/HeaderComponent.html":{}}}],["using",{"_index":748,"title":{},"body":{"components/SettingsComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":886,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":837,"title":{},"body":{"index.html":{}}}],["via",{"_index":720,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["visibility",{"_index":623,"title":{},"body":{"components/ReminderListItemComponent.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ReminderAddComponent.html":{},"components/ReminderComponent.html":{},"components/ReminderListComponent.html":{},"components/ReminderListItemComponent.html":{},"injectables/ReminderService.html":{}}}],["want",{"_index":784,"title":{},"body":{"classes/User.html":{}}}],["warning",{"_index":749,"title":{},"body":{"components/SettingsComponent.html":{}}}],["web",{"_index":538,"title":{},"body":{"components/ReminderAddComponent.html":{}}}],["web/email/api",{"_index":731,"title":{},"body":{"components/SettingsComponent.html":{}}}],["width",{"_index":406,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["wireframe",{"_index":828,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{}}}],["yes",{"_index":456,"title":{},"body":{"classes/Reminder.html":{}}}],["yourself",{"_index":758,"title":{},"body":{"components/SettingsComponent.html":{}}}],["yyyy/mm/dd",{"_index":729,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zone.js",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteUser\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteUser(userid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AdminService } from './admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n})\nexport class AdminComponent implements OnInit {\n  users = [];\n\n  constructor(private adminService: AdminService) {}\n\n  ngOnInit(): void {\n    this.adminService.users.subscribe((users) => (this.users = users));\n    this.adminService.fetchUsers();\n  }\n\n  onDeleteUser(userid) {\n    this.adminService.deleteUser(userid);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      #\n      UserID\n      Email\n      Admin\n      Action\n    \n  \n  \n    \n      {{ i + 1 }}\n      {{ user.userId }}\n      {{ user.email }}\n      {{ user.isAdmin }}\n      \n        \n          Delete\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            #      UserID      Email      Admin      Action                  {{ i + 1 }}      {{ user.userId }}      {{ user.email }}      {{ user.isAdmin }}                        Delete                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/admin/admin-guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable\n    | Promise {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          if (user.isAdmin) {\n            return true;\n          } else {\n            this.router.createUrlTree(['/reminders']);\n          }\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                fetchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(userid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUsers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\ninterface UserResponse {\n  email: string;\n  userId: string;\n  isAdmin: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminService {\n  users = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    this.http\n      .get(environment.baseURL + 'users')\n      .pipe(\n        map((users) => {\n          return users.map((user) => {\n            return {\n              email: user.email,\n              userId: user.userId,\n              isAdmin: user.isAdmin,\n            };\n          });\n        }),\n        tap((users) => {\n          this.users.next(users);\n        })\n      )\n      .subscribe();\n  }\n\n  deleteUser(userid) {\n    this.http\n      .delete(environment.baseURL + `users/${userid}`)\n      .subscribe(() => {\n        this.fetchUsers();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoLogin();\n    Notification.requestPermission();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nAppModule -->\n\nLoadingSpinnerComponent->AppModule\n\n\n\n\n\nReminderAddComponent\n\nReminderAddComponent\n\nAppModule -->\n\nReminderAddComponent->AppModule\n\n\n\n\n\nReminderComponent\n\nReminderComponent\n\nAppModule -->\n\nReminderComponent->AppModule\n\n\n\n\n\nReminderListComponent\n\nReminderListComponent\n\nAppModule -->\n\nReminderListComponent->AppModule\n\n\n\n\n\nReminderListItemComponent\n\nReminderListItemComponent\n\nAppModule -->\n\nReminderListItemComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            ReminderAddComponent\n                        \n                        \n                            ReminderComponent\n                        \n                        \n                            ReminderListComponent\n                        \n                        \n                            ReminderListItemComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ReminderComponent } from './reminder/reminder.component';\nimport { ReminderListComponent } from './reminder/reminder-list/reminder-list.component';\nimport { ReminderAddComponent } from './reminder/reminder-add/reminder-add.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner.component';\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\nimport { ReminderListItemComponent } from './reminder/reminder-list/reminder-list-item/reminder-list-item.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AdminComponent } from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    HeaderComponent,\n    ReminderComponent,\n    ReminderListComponent,\n    ReminderAddComponent,\n    SettingsComponent,\n    LoadingSpinnerComponent,\n    ReminderListItemComponent,\n    AdminComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgbModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n    NgbModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { ReminderComponent } from './reminder/reminder.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { AuthGuard } from './auth/auth-guard';\nimport { AdminGuard } from './admin/admin-guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'reminders', pathMatch: 'full' },\n  { path: 'auth', component: AuthComponent },\n  {\n    path: 'reminders',\n    component: ReminderComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AdminGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                isLoginMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                onSwitchMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSwitchMode\n                        \n                        \n                    \n                \n            \n            \n                \nonSwitchMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthDataResponse, AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n})\nexport class AuthComponent {\n  isLoginMode = true;\n  isLoading = false;\n  error = null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const email = form.value.email;\n    const password = form.value.password;\n\n    let authObserver: Observable;\n\n    this.isLoading = true;\n    if (this.isLoginMode) {\n      authObserver = this.authService.login(email, password);\n    } else {\n      authObserver = this.authService.signup(email, password);\n    }\n\n    authObserver.subscribe(\n      () => {\n        this.isLoading = false;\n        this.router.navigate(['/reminders']);\n      },\n      (errorMessage) => {\n        console.log(errorMessage);\n        if (errorMessage.name === 'TimeoutError') {\n          this.error = errorMessage.message;\n        }\n        if (errorMessage.status === 401) {\n          this.error = 'Error - Wrong credentatials!';\n        } else {\n          this.error =\n            errorMessage.error.status + ' - ' + errorMessage.error.message;\n        }\n        this.isLoading = false;\n      }\n    );\n\n    form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ error }}\n    \n    \n      \n    \n\n    \n      \n        Email\n        \n      \n      \n        Password\n        \n      \n      \n        \n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        \n        |\n        \n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ error }}                                    Email                            Password                                      {{ isLoginMode ? \"Login\" : \"Sign Up\" }}                |                  Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDataResponse.html":{"url":"interfaces/AuthDataResponse.html","title":"interface - AuthDataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _token\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        errorMessage\n                                \n                                \n                                        id\n                                \n                                \n                                        isAdmin\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _token\n                                    \n                                \n                                \n                                    \n                                        _token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { tap, timeout } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from './user.model';\n\nexport interface AuthDataResponse {\n  email: string;\n  _token: string;\n  isAdmin: boolean;\n  id: string;\n  errorMessage?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n  urlStr: string;\n  constructor(private http: HttpClient, private router: Router) {\n    this.urlStr = environment.baseURL + 'auth/';\n  }\n\n  signup(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + 'register', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.id,\n            resData._token,\n            resData.isAdmin\n          );\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      isAdmin: boolean;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      userData.isAdmin\n    );\n    this.user.next(loadedUser);\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + 'login', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.id,\n            resData._token,\n            resData.isAdmin\n          );\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    localStorage.removeItem('userData');\n    this.router.navigate(['/auth']);\n  }\n\n  private handleAuthentication(\n    email: string,\n    id: string,\n    token: string,\n    isAdmin: boolean\n  ) {\n    const user = new User(email, id, token, isAdmin);\n    this.user.next(user);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable\n    | Promise {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-interceptor.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\nimport { exhaustMap, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          setHeaders: { Authorization: `Bearer ${user.token}` },\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlStr\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                    Private\n                                handleAuthentication\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \nautoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthentication(email: string, id: string, token: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { tap, timeout } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from './user.model';\n\nexport interface AuthDataResponse {\n  email: string;\n  _token: string;\n  isAdmin: boolean;\n  id: string;\n  errorMessage?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject(null);\n  urlStr: string;\n  constructor(private http: HttpClient, private router: Router) {\n    this.urlStr = environment.baseURL + 'auth/';\n  }\n\n  signup(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + 'register', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.id,\n            resData._token,\n            resData.isAdmin\n          );\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      isAdmin: boolean;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      userData.isAdmin\n    );\n    this.user.next(loadedUser);\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post(this.urlStr + 'login', {\n        email: email,\n        password: password,\n      })\n      .pipe(\n        timeout(10000),\n        tap((resData) => {\n          this.handleAuthentication(\n            resData.email,\n            resData.id,\n            resData._token,\n            resData.isAdmin\n          );\n        })\n      );\n  }\n\n  logout() {\n    this.user.next(null);\n    localStorage.removeItem('userData');\n    this.router.navigate(['/auth']);\n  }\n\n  private handleAuthentication(\n    email: string,\n    id: string,\n    token: string,\n    isAdmin: boolean\n  ) {\n    const user = new User(email, id, token, isAdmin);\n    this.user.next(user);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onReminderPage\n                            \n                            \n                                reminderSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, reminderService: ReminderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReminderPage\n                        \n                        \n                    \n                \n            \n            \n                \nonReminderPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reminderSearch\n                        \n                        \n                    \n                \n            \n            \n                \nreminderSearch(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\nimport { ReminderService } from '../reminder/reminder.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  isAuthenticated = false;\n  isAdmin = false;\n  private userSub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private reminderService: ReminderService\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.authService.user.subscribe((user) => {\n      this.isAuthenticated = !!user;\n      if (this.isAuthenticated) {\n        this.isAdmin = user.isAdmin;\n      } else {\n        this.isAdmin = false;\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n  onReminderPage() {\n    return this.router.url === '/reminders';\n  }\n\n  reminderSearch(input) {\n    this.reminderService.search(input);\n  }\n\n  onLogout() {\n    if (!this.isAuthenticated) {\n      return;\n    }\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  Reminders\n  \n    \n  \n\n  \n    \n      \n        Home \n      \n      \n        Settings\n      \n\n      \n        Admin\n      \n    \n\n    \n      {{ !isAuthenticated ? \"Login\" : \"Logout\" }}\n    \n    \n      \n      \n        Search\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reminders                            Home                     Settings                    Admin                    {{ !isAuthenticated ? \"Login\" : \"Logout\" }}                            Search            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/loading-spinner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n            \n                styleUrls\n                ./loading-spinner.component.css\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  styleUrls: ['./loading-spinner.component.css'],\n  template:\n    '',\n})\nexport class LoadingSpinnerComponent {}\n\n    \n\n\n    \n                \n                    ./loading-spinner.component.css\n                \n                .lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #212529;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #212529 transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reminder.html":{"url":"classes/Reminder.html","title":"class - Reminder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reminder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reminder/reminder.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                callbackUrl\n                            \n                            \n                                    Public\n                                creation\n                            \n                            \n                                    Public\n                                    Optional\n                                creationString\n                            \n                            \n                                    Public\n                                deadline\n                            \n                            \n                                    Public\n                                    Optional\n                                deadlineString\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, deadline: Date, creation: Date, description: string, notification: string, callbackUrl: string, deadlineString?: string, creationString?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deadline\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creation\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        callbackUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deadlineString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            callbackUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            creationString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            deadlineString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reminder {\n  constructor(\n    public id: string,\n    public name: string,\n    public deadline: Date,\n    public creation: Date,\n    public description: string,\n    public notification: string,\n    public callbackUrl: string,\n    public deadlineString?: string,\n    public creationString?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderAddComponent.html":{"url":"components/ReminderAddComponent.html","title":"component - ReminderAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-add/reminder-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-add\n            \n\n            \n                styleUrls\n                ./reminder-add.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formCallbackUrl\n                            \n                            \n                                formDeadline\n                            \n                            \n                                formDescription\n                            \n                            \n                                formName\n                            \n                            \n                                formNotification\n                            \n                            \n                                invalidForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                selectedNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                savedModify\n                            \n                            \n                                selectOption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modify\n                            \n                            \n                                reminder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                savedModify\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(reminderService: ReminderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-add/reminder-add.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modify\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reminder\n                    \n                \n                \n                    \n                        Type :         Reminder\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        savedModify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            savedModify\n                        \n                        \n                    \n                \n            \n            \n                \nsavedModify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formCallbackUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formDeadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-add/reminder-add.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Reminder } from '../reminder.model';\nimport { ReminderService } from '../reminder.service';\n\n@Component({\n  selector: 'app-reminder-add',\n  templateUrl: './reminder-add.component.html',\n  styleUrls: ['./reminder-add.component.css'],\n})\nexport class ReminderAddComponent implements OnInit {\n  @Input('modify') isModify = false;\n\n  @Input('reminder') remindertoModify: Reminder;\n\n  @Output('savedModify') savedReminder = new EventEmitter();\n\n  formName: string;\n  formDeadline: string;\n  formDescription: string;\n  formNotification: string;\n  formCallbackUrl: string;\n\n  isLoading = false;\n  invalidForm = false;\n  selectedNotification: string;\n\n  constructor(private reminderService: ReminderService) {}\n  ngOnInit(): void {\n    if (this.remindertoModify) {\n      this.formName = this.remindertoModify.name;\n      this.formDeadline = new Date(this.remindertoModify.deadline)\n        .toISOString()\n        .slice(0, -1);\n      this.formDescription = this.remindertoModify.description;\n      this.formNotification = this.remindertoModify.notification;\n      this.formCallbackUrl = this.remindertoModify.callbackUrl;\n    }\n  }\n\n  savedModify() {\n    let modified = new Reminder(\n      this.remindertoModify.id,\n      this.formName,\n      new Date(this.formDeadline),\n      new Date(),\n      this.formDescription,\n      this.formNotification,\n      this.formNotification === 'API' ? this.formCallbackUrl : ''\n    );\n    this.savedReminder.emit(modified);\n  }\n\n  selectOption(value) {\n    this.selectedNotification = value;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      this.invalidForm = true;\n      form.value;\n      return;\n    }\n    this.invalidForm = false;\n\n    let newReminder = new Reminder(\n      '',\n      this.formName,\n      new Date(this.formDeadline),\n      new Date(),\n      this.formDescription,\n      this.formNotification,\n      this.formNotification === 'API' ? this.formCallbackUrl : ''\n    );\n    this.reminderService.createReminder(newReminder);\n\n    form.reset();\n    this.selectedNotification = null;\n  }\n}\n\n    \n\n    \n        Add a new Reminder\n\n\n\n  \n    \n  \n\n  \n    \n      Reminder name\n      \n      \n        \n          Please choose a name.\n        \n      \n    \n    \n      Deadline\n      \n    \n\n    \n      \n        Please choose a deadline.\n      \n    \n    \n      Description\n      \n    \n\n    Select Notifcation Mode\n    \n      Web\n      Email\n      API\n    \n\n    \n      \n        Please choose a notification mode.\n      \n    \n\n    \n      \n      \n        You will be notifed on your registered email.\n      \n    \n\n    \n      \n      \n        API Callback URL\n        \n      \n    \n\n    \n      \n      Submit\n    \n  \n\n  \n    \n      Save\n    \n  \n\n\n    \n\n    \n                \n                    ./reminder-add.component.css\n                \n                textarea {\n  resize: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add a new Reminder                    Reminder name                              Please choose a name.                            Deadline                            Please choose a deadline.                    Description              Select Notifcation Mode          Web      Email      API                      Please choose a notification mode.                                  You will be notifed on your registered email.                                  API Callback URL                                  Submit                  Save      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderComponent.html":{"url":"components/ReminderComponent.html","title":"component - ReminderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder\n            \n\n            \n                styleUrls\n                ./reminder.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reminder',\n  templateUrl: './reminder.component.html',\n  styleUrls: ['./reminder.component.css'],\n})\nexport class ReminderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./reminder.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderListComponent.html":{"url":"components/ReminderListComponent.html","title":"component - ReminderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-list/reminder-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-list\n            \n\n            \n                styleUrls\n                ./reminder-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reminders\n                            \n                            \n                                reminderSubscrtiption\n                            \n                            \n                                remindertoModify\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteItem\n                            \n                            \n                                onModifyItem\n                            \n                            \n                                onModifySaved\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(reminderService: ReminderService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-list/reminder-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reminderService\n                                                  \n                                                        \n                                                                        ReminderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteItem\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteItem(reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModifyItem\n                        \n                        \n                    \n                \n            \n            \n                \nonModifyItem(reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModifySaved\n                        \n                        \n                    \n                \n            \n            \n                \nonModifySaved(newReminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newReminder\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminderSubscrtiption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remindertoModify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reminder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ReminderService } from '../reminder.service';\nimport { Reminder } from '../reminder.model';\n\n@Component({\n  selector: 'app-reminder-list',\n  templateUrl: './reminder-list.component.html',\n  styleUrls: ['./reminder-list.component.css'],\n})\nexport class ReminderListComponent implements OnInit, OnDestroy {\n  reminders = [];\n  reminderSubscrtiption: Subscription;\n\n  remindertoModify: Reminder;\n\n  constructor(\n    private reminderService: ReminderService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnDestroy(): void {\n    this.reminderSubscrtiption.unsubscribe();\n  }\n\n  open(content) {\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-basic-title' })\n      .result.then(\n        () => {},\n        () => {}\n      );\n  }\n\n  ngOnInit(): void {\n    this.reminderSubscrtiption = this.reminderService.reminders.subscribe(\n      (reminders) => {\n        this.reminders = reminders;\n      }\n    );\n\n    this.reminderService.getReminders();\n  }\n\n  onDeleteItem(reminder) {\n    this.reminderService.deleteReminder(reminder.id);\n  }\n\n  onModifySaved(newReminder) {\n    this.reminderService.updateReminder(newReminder);\n  }\n\n  onModifyItem(reminder) {\n    this.remindertoModify = reminder;\n  }\n}\n\n    \n\n    \n        Current Reminders\n\n\n  \n    Reminder name\n    Deadline\n    Notification\n    Action\n  \n\n  \n\n  \n    \n      Modify Reminder\n      \n         × \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n        \n          Modify Remidner\n          \n            &times;\n          \n        \n        ...\n        \n          \n            Close\n          \n          Save changes\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./reminder-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Current Reminders      Reminder name    Deadline    Notification    Action                Modify Reminder               ×                                                         Modify Remidner                      ×                          ...                              Close                    Save changes                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReminderListItemComponent.html":{"url":"components/ReminderListItemComponent.html","title":"component - ReminderListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReminderListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reminder-list-item\n            \n\n            \n                styleUrls\n                ./reminder-list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reminder-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showingDescription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onModify\n                            \n                            \n                                onReminderClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reminder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onModify\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:53\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reminder\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onModify\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModify\n                        \n                        \n                    \n                \n            \n            \n                \nonModify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReminderClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonReminderClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showingDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Reminder } from '../../reminder.model';\n\n@Component({\n  selector: 'app-reminder-list-item',\n  templateUrl: './reminder-list-item.component.html',\n  styleUrls: ['./reminder-list-item.component.css'],\n  animations: [\n    trigger('smoothCollapse', [\n      state(\n        'initial',\n        style({\n          height: '0',\n          overflow: 'hidden',\n          opacity: '0',\n          visibility: 'hidden',\n        })\n      ),\n      state(\n        'final',\n        style({\n          overflow: 'hidden',\n        })\n      ),\n      transition('initialfinal', animate('250ms')),\n    ]),\n  ],\n})\nexport class ReminderListItemComponent {\n  @Input() reminder;\n  @Output('onDelete') deleteEvent = new EventEmitter();\n  @Output('onModify') modifyEvent = new EventEmitter();\n\n  showingDescription = false;\n\n  onReminderClicked() {\n    this.showingDescription = !this.showingDescription;\n  }\n\n  onDelete() {\n    this.deleteEvent.emit(this.reminder);\n  }\n\n  onModify() {\n    this.modifyEvent.emit(this.reminder);\n  }\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ reminder.name }}\n  \n    {{ reminder.deadlineString }}\n  \n  \n    {{ reminder.notification }}\n  \n  \n    \n      Modify\n    \n    \n      Delete\n    \n  \n\n\n  \n    \n      {{ reminder.description }}\n      \n    \n    Created at {{ reminder.creationString }} \n\n    \n      \n      \n        Modify\n      \n      \n        Delete\n      \n      \n      {{ reminder.callbackUrl }}\n    \n  \n\n\n    \n\n    \n                \n                    ./reminder-list-item.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ reminder.name }}      {{ reminder.deadlineString }}        {{ reminder.notification }}              Modify              Delete                  {{ reminder.description }}              Created at {{ reminder.creationString }}                         Modify                    Delete                  {{ reminder.callbackUrl }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReminderListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReminderService.html":{"url":"injectables/ReminderService.html","title":"injectable - ReminderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReminderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reminder/reminder.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allReminders\n                            \n                            \n                                baseURL\n                            \n                            \n                                notifications\n                            \n                            \n                                reminders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReminder\n                            \n                            \n                                deleteReminder\n                            \n                            \n                                getNotifications\n                            \n                            \n                                getReminders\n                            \n                            \n                                search\n                            \n                            \n                                updateReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/reminder/reminder.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReminder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReminder(reminder: Reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n                                    \n                                                Reminder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteReminder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteReminder(reminderid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminderid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotifications\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReminders\n                        \n                        \n                    \n                \n            \n            \n                \ngetReminders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateReminder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateReminder(reminder: Reminder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reminder/reminder.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminder\n                                    \n                                                Reminder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allReminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reminder[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reminders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.allReminders\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reminder/reminder.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { Reminder } from './reminder.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ReminderService {\n  // this is for searching\n  allReminders: Reminder[] = [];\n  // this is what we showing\n  reminders: BehaviorSubject = new BehaviorSubject(\n    this.allReminders\n  );\n\n  baseURL: string;\n\n  constructor(private http: HttpClient) {\n    this.baseURL = environment.baseURL;\n  }\n\n  search(text: string) {\n    if (text) {\n      let newReminders = this.allReminders.filter(\n        (reminder) =>\n          reminder.name.toUpperCase().includes(text.toUpperCase()) ||\n          reminder.notification.toUpperCase().includes(text.toUpperCase()) ||\n          reminder.deadlineString.toUpperCase().includes(text.toUpperCase())\n      );\n\n      this.reminders.next(newReminders);\n      return;\n    }\n    this.reminders.next(this.allReminders);\n  }\n\n  getReminders() {\n    this.http\n      .get(this.baseURL + 'reminders', {})\n      .pipe(\n        map((reminders) => {\n          return reminders.map((reminder) => {\n            return {\n              ...reminder,\n              deadlineString: new Date(reminder.deadline)\n                .toLocaleString()\n                .slice(0, -3),\n              creationString: new Date(reminder.creation)\n                .toLocaleString()\n                .slice(0, -3),\n            };\n          });\n        }),\n        take(1)\n      )\n      .subscribe((response) => {\n        this.allReminders = response;\n        this.reminders.next(this.allReminders);\n        this.getNotifications();\n      });\n  }\n\n  notifications = [];\n  getNotifications() {\n    this.http\n      .get(this.baseURL + 'reminders/web', {})\n      .pipe(take(1))\n      .subscribe((response) => {\n        if (this.notifications.length) {\n          this.notifications.forEach((n) => {\n            clearTimeout(n);\n          });\n        }\n        response.forEach((r) => {\n          if (new Date()  {\n              var notification = new Notification('Reminders', {\n                body: `Your reminder: ${r.name} is due now!`,\n              });\n              notification.onclick = () => {\n                notification.close();\n              };\n            }, milis);\n            this.notifications.push(notificationTimeout);\n          }\n        });\n      });\n  }\n\n  createReminder(reminder: Reminder) {\n    this.http\n      .post(this.baseURL + 'reminders', {\n        name: reminder.name,\n        deadline: reminder.deadline,\n        description: reminder.description,\n        notification: reminder.notification,\n        creation: reminder.creation,\n        callbackUrl:\n          reminder.notification === 'API' ? reminder.callbackUrl : '',\n      })\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n\n  updateReminder(reminder: Reminder) {\n    this.http\n      .put(this.baseURL + `reminders/${reminder.id}`, {\n        name: reminder.name,\n        deadline: reminder.deadline,\n        description: reminder.description,\n        notification: reminder.notification,\n        creation: reminder.creation,\n        callbackUrl:\n          reminder.notification === 'API' ? reminder.callbackUrl : '',\n      })\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n\n  deleteReminder(reminderid) {\n    this.http\n      .delete(this.baseURL + `reminders/${reminderid}`)\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.getReminders();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendURL\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backendURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { environment } from './../../environments/environment';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n})\nexport class SettingsComponent {\n  constructor(private authService: AuthService) {\n    this.backendURL = environment.baseURL;\n    this.token = this.authService.user.value.token;\n  }\n\n  backendURL: string;\n  token: string;\n}\n\n    \n\n    \n        \n  \n    \n      Add reminders via email\n      \n        Service's email address:\n        reminders.api2020@gmail.com\n      \n      \n      \n        The email's syntax should be like this:\n        \n        1. line: Reminder's name \n        2. line: Reminder's deadline as “yyyy/mm/dd hh:mm”\n        3. line: Reminder's notification mode\n        (web/email/api)\n        4. line: Only if you Choosed \"API\" callback\n        notification: Reminder's Callback URL\n        5+ lines: Reminder's description\n      \n      \n      \n        If there is any error in the sent email, the service will answer in a\n        descriptive email to the sender mail. \n        If the email adding was successfull then you should see it in the main\n        page.\n      \n    \n    \n      Add reminders via API\n      \n        You can easily add, modify, delete using the API. \n        Warning! Do not share your token with anyone!\n      \n      \n        \n          Show Token\n        \n        \n          \n            \n              Your token: {{ token }}\n            \n          \n        \n      \n      \n      \n        You need to be authorized before you can call on any URL. You can\n        authorize yourself by adding your token to the your request's header\n        like this:\n        \n        Header: ( Authorization: \"Bearer *token*\" )\n      \n      \n      The server's base URL: {{ backendURL }}\n      \n      \n        \n          \n            HTTP\n            URL\n            Last\n          \n        \n        \n          \n            GET\n            /reminders\n            Gets All.\n          \n          \n            POST\n            /reminders\n            Creates a new ID.\n          \n          \n            GET\n            /reminders/1\n            Gets With ID 1.\n          \n          \n            PUT\n            /reminders/1\n            Updates with ID 1.\n          \n          \n            DELETE\n            /reminders/1\n            Deletes with ID 1.\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add reminders via email              Service\\'s email address:        reminders.api2020@gmail.com                          The email\\'s syntax should be like this:                1. line: Reminder\\'s name         2. line: Reminder\\'s deadline as “yyyy/mm/dd hh:mm”        3. line: Reminder\\'s notification mode        (web/email/api)        4. line: Only if you Choosed \"API\" callback        notification: Reminder\\'s Callback URL        5+ lines: Reminder\\'s description                          If there is any error in the sent email, the service will answer in a        descriptive email to the sender mail.         If the email adding was successfull then you should see it in the main        page.                    Add reminders via API              You can easily add, modify, delete using the API.         Warning! Do not share your token with anyone!                              Show Token                                                    Your token: {{ token }}                                                        You need to be authorized before you can call on any URL. You can        authorize yourself by adding your token to the your request\\'s header        like this:                Header: ( Authorization: \"Bearer *token*\" )                  The server\\'s base URL: {{ backendURL }}                                          HTTP            URL            Last                                                GET            /reminders            Gets All.                                POST            /reminders            Creates a new ID.                                GET            /reminders/1            Gets With ID 1.                                PUT            /reminders/1            Updates with ID 1.                                DELETE            /reminders/1            Deletes with ID 1.                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'ReminderAddComponent', 'selector': 'app-reminder-add'},{'name': 'ReminderComponent', 'selector': 'app-reminder'},{'name': 'ReminderListComponent', 'selector': 'app-reminder-list'},{'name': 'ReminderListItemComponent', 'selector': 'app-reminder-list-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, id: string, _token: string, isAdmin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isAdmin\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/user.model.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class User {\n  //might want to add tokenexpiration later\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    public isAdmin: boolean\n  ) {}\n\n  get token() {\n    return this._token;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponse.html":{"url":"interfaces/UserResponse.html","title":"interface - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/admin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        isAdmin\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\ninterface UserResponse {\n  email: string;\n  userId: string;\n  isAdmin: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AdminService {\n  users = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    this.http\n      .get(environment.baseURL + 'users')\n      .pipe(\n        map((users) => {\n          return users.map((user) => {\n            return {\n              email: user.email,\n              userId: user.userId,\n              isAdmin: user.isAdmin,\n            };\n          });\n        }),\n        tap((users) => {\n          this.users.next(users);\n        })\n      )\n      .subscribe();\n  }\n\n  deleteUser(userid) {\n    this.http\n      .delete(environment.baseURL + `users/${userid}`)\n      .subscribe(() => {\n        this.fetchUsers();\n      });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/admin-guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/admin/admin.service.ts\n            \n            interface\n            UserResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthDataResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-add/reminder-add.component.ts\n            \n            component\n            ReminderAddComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-list/reminder-list-item/reminder-list-item.component.ts\n            \n            component\n            ReminderListItemComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder-list/reminder-list.component.ts\n            \n            component\n            ReminderListComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.component.ts\n            \n            component\n            ReminderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.model.ts\n            \n            class\n            Reminder\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/reminder/reminder.service.ts\n            \n            injectable\n            ReminderService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/localize : ~10.2.0\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            bootstrap : ^4.5.3\n        \n            jquery : ^3.5.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWireFrame: https://www.figma.com/file/hgZOZrxDfCgk5hvKf8ckRa/Reminders-Sza?node-id=0%3A1\nFrontend\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nAppModule -->\n\nLoadingSpinnerComponent->AppModule\n\n\n\n\n\nReminderAddComponent\n\nReminderAddComponent\n\nAppModule -->\n\nReminderAddComponent->AppModule\n\n\n\n\n\nReminderComponent\n\nReminderComponent\n\nAppModule -->\n\nReminderComponent->AppModule\n\n\n\n\n\nReminderListComponent\n\nReminderListComponent\n\nAppModule -->\n\nReminderListComponent->AppModule\n\n\n\n\n\nReminderListItemComponent\n\nReminderListItemComponent\n\nAppModule -->\n\nReminderListItemComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  baseURL: 'http://localhost:5000/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  baseURL: 'https://reminders-sza-backend.herokuapp.com/',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
